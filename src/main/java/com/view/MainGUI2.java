/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.view;

import com.dbModel.project.ProjectListDAO;
import com.dbModel.project.ProjectListDTO;
import com.dbModel.project.ProjectShareDAO;
import com.dbModel.project.ProjectShareDTO;
import com.dbModel.todolist.TodoListDAO;
import com.dbModel.todolist.TodoListDTO;
import com.dbModel.todolist.TodoListShareDAO;
import com.dbModel.todolist.TodoListShareDTO;
import com.dbModel.userlist.UserListDAO;
import com.util.DateUtil;
import com.util.UserStateUtil;

import javax.imageio.ImageIO;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.plaf.basic.BasicScrollBarUI;
import java.awt.*;
import java.awt.event.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.*;
import java.util.List;

/**
 *
 * @author pks01
 */
public class MainGUI2 extends javax.swing.JFrame {
    private UserListDAO userListDAO;
    private TodoListDAO todoListDAO;
    private TodoListShareDAO todoListShareDAO;
    private ProjectListDAO projectListDAO;
    private ProjectShareDAO projectShareDAO;

    private Date currentDate;
    private SimpleDateFormat sdf;

    private int[][] dayArr;
    private JLabel[][] dayList;
    private JPanel[][] dayPanel;

    private CardLayout cardLayout;
    
    private int selectIdx;      //선택한 행
    private TodoListDTO todoListDTO;    //할 일 리스트에서 선택한 행의 dto를 담아주는 용도

    List<ProjectListDTO> projectListDTOList;
    
    private int editAuthno;             //수정권한 확인
    private int dlCheck;            //1 : 수정상태, 2 : 추가상태
    private int clearAddProjectUser;    //Project 추가할 때 공동사용자 아이디 체크했는지 확인

    /**
     * Creates new form MainGUI2
     */
    public MainGUI2() {
        initComponents();
        //접속중인 아이디 log
        System.out.println("접속중인 UserId : " + UserStateUtil.userId);
        System.out.println("접속중인 UserNo : " + UserStateUtil.userNo + "\n");

        init();
        addEvent();
    }

    public MainGUI2(String userId) {
        this();

        String name = "";
        try {
            name = userListDAO.fineUserName(userId);
        } catch (SQLException e) {
            e.printStackTrace();
        }
        lbName.setText(name);
        lbUserId.setText(UserStateUtil.userId);
    }

    public Date getCurrentDate(){
        return currentDate;
    }

    public void setCurrentDate(Date currentDate) {
        this.currentDate = currentDate;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dlEditTodo = new javax.swing.JDialog();
        jPanel14 = new javax.swing.JPanel();
        tfEditTodo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        spDateSelect = new javax.swing.JSpinner();
        btnResult2 = new javax.swing.JButton();
        btnEditClose = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        cbTodoResult = new javax.swing.JCheckBox();
        jLabel10 = new javax.swing.JLabel();
        tfShareUser = new javax.swing.JTextField();
        btnCheckUser = new javax.swing.JButton();
        btnTodoListDelete = new javax.swing.JButton();
        dlCompletionTodo = new javax.swing.JDialog();
        jPanel16 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        todoCompletionList = new javax.swing.JList<>();
        dlAddProject = new javax.swing.JDialog();
        jPanel20 = new javax.swing.JPanel();
        tfAddProjectTitle = new javax.swing.JTextField();
        tfAddProjectCon = new javax.swing.JTextField();
        labbb = new javax.swing.JLabel();
        spStartDateSet = new javax.swing.JSpinner();
        spEndDateSet = new javax.swing.JSpinner();
        btnAddResult = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        tfShareUserSet = new javax.swing.JTextField();
        btnCheckUser1 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        dlEditProject = new javax.swing.JDialog();
        jPanel21 = new javax.swing.JPanel();
        tfEditProjectTitle = new javax.swing.JTextField();
        tfEditProjectCon = new javax.swing.JTextField();
        labbb1 = new javax.swing.JLabel();
        spStartDateSet1 = new javax.swing.JSpinner();
        spEndDateSet1 = new javax.swing.JSpinner();
        btnEditProjectResult = new javax.swing.JButton();
        btnEditProjectClose = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        tfShareUserSet1 = new javax.swing.JTextField();
        btnCheckUser2 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        labbb2 = new javax.swing.JLabel();
        tfProjectDivi = new javax.swing.JTextField();
        btnProjectDelete = new javax.swing.JButton();
        panel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        plProfileBox = new javax.swing.JPanel();
        lbProf = new javax.swing.JLabel();
        lbName = new javax.swing.JLabel();
        lbUserId = new javax.swing.JLabel();
        btnUserEdit = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        lbTodoBtn = new javax.swing.JLabel();
        lbNextTodoBtn = new javax.swing.JLabel();
        lbProjectBtn = new javax.swing.JLabel();
        btnAddTodo = new javax.swing.JPanel();
        lbHome = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        plMain = new javax.swing.JPanel();
        plCalendar = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel58 = new javax.swing.JPanel();
        tfSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        lbYear = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        btnFirst = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();
        lbMonth = new javax.swing.JLabel();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        plDay = new javax.swing.JPanel();
        jPanel39 = new javax.swing.JPanel();
        jPanel42 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel43 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel37 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel56 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jPanel57 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jPanel41 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel40 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        calenderPanel = new javax.swing.JPanel();
        plCal = new javax.swing.JPanel();
        plC1 = new javax.swing.JPanel();
        lbC1 = new javax.swing.JLabel();
        plC2 = new javax.swing.JPanel();
        lbC2 = new javax.swing.JLabel();
        plC3 = new javax.swing.JPanel();
        lbC3 = new javax.swing.JLabel();
        plC4 = new javax.swing.JPanel();
        lbC4 = new javax.swing.JLabel();
        plC5 = new javax.swing.JPanel();
        lbC5 = new javax.swing.JLabel();
        plC6 = new javax.swing.JPanel();
        lbC6 = new javax.swing.JLabel();
        plC7 = new javax.swing.JPanel();
        lbC7 = new javax.swing.JLabel();
        plC8 = new javax.swing.JPanel();
        lbC8 = new javax.swing.JLabel();
        plC9 = new javax.swing.JPanel();
        lbC9 = new javax.swing.JLabel();
        plC10 = new javax.swing.JPanel();
        lbC10 = new javax.swing.JLabel();
        plC11 = new javax.swing.JPanel();
        lbC11 = new javax.swing.JLabel();
        plC12 = new javax.swing.JPanel();
        lbC12 = new javax.swing.JLabel();
        plC13 = new javax.swing.JPanel();
        lbC13 = new javax.swing.JLabel();
        plC14 = new javax.swing.JPanel();
        lbC14 = new javax.swing.JLabel();
        plC15 = new javax.swing.JPanel();
        lbC15 = new javax.swing.JLabel();
        plC16 = new javax.swing.JPanel();
        lbC16 = new javax.swing.JLabel();
        plC17 = new javax.swing.JPanel();
        lbC17 = new javax.swing.JLabel();
        plC18 = new javax.swing.JPanel();
        lbC18 = new javax.swing.JLabel();
        plC19 = new javax.swing.JPanel();
        lbC19 = new javax.swing.JLabel();
        plC20 = new javax.swing.JPanel();
        lbC20 = new javax.swing.JLabel();
        plC21 = new javax.swing.JPanel();
        lbC21 = new javax.swing.JLabel();
        plC22 = new javax.swing.JPanel();
        lbC22 = new javax.swing.JLabel();
        plC23 = new javax.swing.JPanel();
        lbC23 = new javax.swing.JLabel();
        plC24 = new javax.swing.JPanel();
        lbC24 = new javax.swing.JLabel();
        plC25 = new javax.swing.JPanel();
        lbC25 = new javax.swing.JLabel();
        plC26 = new javax.swing.JPanel();
        lbC26 = new javax.swing.JLabel();
        plC27 = new javax.swing.JPanel();
        lbC27 = new javax.swing.JLabel();
        plC28 = new javax.swing.JPanel();
        lbC28 = new javax.swing.JLabel();
        plC29 = new javax.swing.JPanel();
        lbC29 = new javax.swing.JLabel();
        plC30 = new javax.swing.JPanel();
        lbC30 = new javax.swing.JLabel();
        plC31 = new javax.swing.JPanel();
        lbC31 = new javax.swing.JLabel();
        plC32 = new javax.swing.JPanel();
        lbC32 = new javax.swing.JLabel();
        plC33 = new javax.swing.JPanel();
        lbC33 = new javax.swing.JLabel();
        plC34 = new javax.swing.JPanel();
        lbC34 = new javax.swing.JLabel();
        plC35 = new javax.swing.JPanel();
        lbC35 = new javax.swing.JLabel();
        plC36 = new javax.swing.JPanel();
        lbC36 = new javax.swing.JLabel();
        plC37 = new javax.swing.JPanel();
        lbC37 = new javax.swing.JLabel();
        plC38 = new javax.swing.JPanel();
        lbC38 = new javax.swing.JLabel();
        plC39 = new javax.swing.JPanel();
        lbC39 = new javax.swing.JLabel();
        plC40 = new javax.swing.JPanel();
        lbC40 = new javax.swing.JLabel();
        plC41 = new javax.swing.JPanel();
        lbC41 = new javax.swing.JLabel();
        plC42 = new javax.swing.JPanel();
        lbC42 = new javax.swing.JLabel();
        plTodo = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        lbToday = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        todoList = new javax.swing.JList<>();
        jPanel13 = new javax.swing.JPanel();
        tfAddTodo = new javax.swing.JTextField();
        btnAddTodoList = new javax.swing.JButton();
        btnCompletionTodo1 = new javax.swing.JButton();
        plNextTodo = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        todoAllList = new javax.swing.JList<>();
        btnCompletionTodo2 = new javax.swing.JButton();
        plProject = new javax.swing.JPanel();
        plProjectBB = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        btnAddProject = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();

        dlEditTodo.setBackground(new java.awt.Color(255, 255, 255));
        dlEditTodo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        dlEditTodo.setResizable(false);
        dlEditTodo.setSize(new java.awt.Dimension(453, 420));

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));

        tfEditTodo.setFont(new java.awt.Font("맑은 고딕", 1, 20)); // NOI18N
        tfEditTodo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tfEditTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfEditTodoActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("맑은 고딕", 1, 20)); // NOI18N
        jLabel1.setText("날짜");

        spDateSelect.setFont(new java.awt.Font("Yu Gothic UI", 0, 20)); // NOI18N
        spDateSelect.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnResult2.setFont(new java.awt.Font("맑은 고딕 Semilight", 0, 24)); // NOI18N
        btnResult2.setText("수정");
        btnResult2.setBorder(null);
        btnResult2.setFocusPainted(false);
        btnResult2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResult2ActionPerformed(evt);
            }
        });

        btnEditClose.setBackground(new java.awt.Color(202, 187, 187));
        btnEditClose.setFont(new java.awt.Font("맑은 고딕 Semilight", 0, 24)); // NOI18N
        btnEditClose.setForeground(new java.awt.Color(255, 255, 255));
        btnEditClose.setText("닫기");
        btnEditClose.setBorder(null);
        btnEditClose.setFocusPainted(false);
        btnEditClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditCloseActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("맑은 고딕", 1, 20)); // NOI18N
        jLabel9.setText("완료여부");

        cbTodoResult.setBackground(new java.awt.Color(255, 255, 255));
        cbTodoResult.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cbTodoResult.setPreferredSize(new java.awt.Dimension(30, 30));
        cbTodoResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTodoResultActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("맑은 고딕", 1, 20)); // NOI18N
        jLabel10.setText("공유");

        tfShareUser.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 20)); // NOI18N
        tfShareUser.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnCheckUser.setBackground(new java.awt.Color(179, 159, 159));
        btnCheckUser.setFont(new java.awt.Font("맑은 고딕", 1, 20)); // NOI18N
        btnCheckUser.setForeground(new java.awt.Color(255, 255, 255));
        btnCheckUser.setText("확인");
        btnCheckUser.setBorder(null);
        btnCheckUser.setFocusPainted(false);
        btnCheckUser.setMargin(new java.awt.Insets(0, 0, 0, 0));

        btnTodoListDelete.setFont(new java.awt.Font("맑은 고딕", 1, 20)); // NOI18N
        btnTodoListDelete.setForeground(new java.awt.Color(153, 153, 153));
        btnTodoListDelete.setText("삭제");
        btnTodoListDelete.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        btnTodoListDelete.setFocusPainted(false);
        btnTodoListDelete.setMargin(new java.awt.Insets(0, 0, 0, 0));

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel14Layout.createSequentialGroup()
                        .addComponent(btnResult2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEditClose, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tfEditTodo, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(58, 58, 58)))
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addComponent(cbTodoResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnTodoListDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addGap(155, 155, 155)
                                .addComponent(btnCheckUser, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfShareUser, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spDateSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(tfEditTodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(spDateSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(tfShareUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCheckUser, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel9)
                        .addComponent(cbTodoResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnTodoListDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 107, Short.MAX_VALUE)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnResult2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditClose, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout dlEditTodoLayout = new javax.swing.GroupLayout(dlEditTodo.getContentPane());
        dlEditTodo.getContentPane().setLayout(dlEditTodoLayout);
        dlEditTodoLayout.setHorizontalGroup(
            dlEditTodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        dlEditTodoLayout.setVerticalGroup(
            dlEditTodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        dlCompletionTodo.setResizable(false);
        dlCompletionTodo.setSize(new java.awt.Dimension(405, 305));

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));

        todoCompletionList.setBorder(null);
        todoCompletionList.setFont(new java.awt.Font("맑은 고딕", 1, 20)); // NOI18N
        todoCompletionList.setForeground(new java.awt.Color(153, 153, 153));
        todoCompletionList.setFocusable(false);
        todoCompletionList.setSelectionBackground(new java.awt.Color(102, 102, 102));
        todoCompletionList.setSelectionForeground(new java.awt.Color(255, 255, 255));
        jScrollPane4.setViewportView(todoCompletionList);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 613, Short.MAX_VALUE)
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout dlCompletionTodoLayout = new javax.swing.GroupLayout(dlCompletionTodo.getContentPane());
        dlCompletionTodo.getContentPane().setLayout(dlCompletionTodoLayout);
        dlCompletionTodoLayout.setHorizontalGroup(
            dlCompletionTodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        dlCompletionTodoLayout.setVerticalGroup(
            dlCompletionTodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        dlAddProject.setBackground(new java.awt.Color(255, 255, 255));
        dlAddProject.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        dlAddProject.setResizable(false);
        dlAddProject.setSize(new java.awt.Dimension(504, 440));

        jPanel20.setBackground(new java.awt.Color(255, 255, 255));

        tfAddProjectTitle.setFont(new java.awt.Font("맑은 고딕", 1, 21)); // NOI18N
        tfAddProjectTitle.setText("프로젝트 제목");
        tfAddProjectTitle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        tfAddProjectTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfAddProjectTitleActionPerformed(evt);
            }
        });

        tfAddProjectCon.setFont(new java.awt.Font("맑은 고딕", 1, 21)); // NOI18N
        tfAddProjectCon.setText("프로젝트 내용");
        tfAddProjectCon.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        tfAddProjectCon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfAddProjectConActionPerformed(evt);
            }
        });

        labbb.setFont(new java.awt.Font("맑은 고딕", 1, 20)); // NOI18N
        labbb.setText("날짜");

        spStartDateSet.setFont(new java.awt.Font("Yu Gothic UI", 0, 20)); // NOI18N
        spStartDateSet.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        spEndDateSet.setFont(new java.awt.Font("Yu Gothic UI", 0, 20)); // NOI18N
        spEndDateSet.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        btnAddResult.setFont(new java.awt.Font("맑은 고딕 Semilight", 0, 24)); // NOI18N
        btnAddResult.setText("추가");
        btnAddResult.setBorder(null);
        btnAddResult.setBorderPainted(false);
        btnAddResult.setFocusPainted(false);
        btnAddResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddResultActionPerformed(evt);
            }
        });

        btnClose.setBackground(new java.awt.Color(202, 187, 187));
        btnClose.setFont(new java.awt.Font("맑은 고딕 Semilight", 0, 24)); // NOI18N
        btnClose.setForeground(new java.awt.Color(255, 255, 255));
        btnClose.setText("닫기");
        btnClose.setBorder(null);
        btnClose.setBorderPainted(false);
        btnClose.setFocusPainted(false);
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("맑은 고딕", 1, 20)); // NOI18N
        jLabel19.setText("공유");

        tfShareUserSet.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 20)); // NOI18N
        tfShareUserSet.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        btnCheckUser1.setBackground(new java.awt.Color(179, 159, 159));
        btnCheckUser1.setFont(new java.awt.Font("맑은 고딕", 1, 20)); // NOI18N
        btnCheckUser1.setForeground(new java.awt.Color(255, 255, 255));
        btnCheckUser1.setText("확인");
        btnCheckUser1.setBorder(null);
        btnCheckUser1.setFocusPainted(false);
        btnCheckUser1.setMargin(new java.awt.Insets(0, 0, 0, 0));

        jLabel15.setText("~");

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(tfAddProjectCon, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addComponent(btnAddResult, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tfAddProjectTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labbb)
                            .addComponent(jLabel19))
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel20Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spEndDateSet, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel20Layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(spStartDateSet, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfShareUserSet, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnCheckUser1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(tfAddProjectTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tfAddProjectCon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labbb)
                    .addComponent(spStartDateSet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(spEndDateSet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(tfShareUserSet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCheckUser1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddResult, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55))
        );

        javax.swing.GroupLayout dlAddProjectLayout = new javax.swing.GroupLayout(dlAddProject.getContentPane());
        dlAddProject.getContentPane().setLayout(dlAddProjectLayout);
        dlAddProjectLayout.setHorizontalGroup(
            dlAddProjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        dlAddProjectLayout.setVerticalGroup(
            dlAddProjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        dlEditProject.setBackground(new java.awt.Color(255, 255, 255));
        dlEditProject.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        dlEditProject.setPreferredSize(new java.awt.Dimension(504, 501));
        dlEditProject.setResizable(false);
        dlEditProject.setSize(new java.awt.Dimension(504, 480));

        jPanel21.setBackground(new java.awt.Color(255, 255, 255));

        tfEditProjectTitle.setFont(new java.awt.Font("맑은 고딕", 1, 21)); // NOI18N
        tfEditProjectTitle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        tfEditProjectTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfEditProjectTitleActionPerformed(evt);
            }
        });

        tfEditProjectCon.setFont(new java.awt.Font("맑은 고딕", 1, 21)); // NOI18N
        tfEditProjectCon.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        tfEditProjectCon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfEditProjectConActionPerformed(evt);
            }
        });

        labbb1.setFont(new java.awt.Font("맑은 고딕", 1, 20)); // NOI18N
        labbb1.setText("날짜");

        spStartDateSet1.setFont(new java.awt.Font("Yu Gothic UI", 0, 20)); // NOI18N
        spStartDateSet1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        spEndDateSet1.setFont(new java.awt.Font("Yu Gothic UI", 0, 20)); // NOI18N
        spEndDateSet1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        btnEditProjectResult.setFont(new java.awt.Font("맑은 고딕 Semilight", 0, 24)); // NOI18N
        btnEditProjectResult.setText("수정");
        btnEditProjectResult.setBorder(null);
        btnEditProjectResult.setBorderPainted(false);
        btnEditProjectResult.setFocusPainted(false);
        btnEditProjectResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditProjectResultActionPerformed(evt);
            }
        });

        btnEditProjectClose.setBackground(new java.awt.Color(202, 187, 187));
        btnEditProjectClose.setFont(new java.awt.Font("맑은 고딕 Semilight", 0, 24)); // NOI18N
        btnEditProjectClose.setForeground(new java.awt.Color(255, 255, 255));
        btnEditProjectClose.setText("닫기");
        btnEditProjectClose.setBorder(null);
        btnEditProjectClose.setBorderPainted(false);
        btnEditProjectClose.setFocusPainted(false);
        btnEditProjectClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditProjectCloseActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("맑은 고딕", 1, 20)); // NOI18N
        jLabel20.setText("공유");

        tfShareUserSet1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 20)); // NOI18N
        tfShareUserSet1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        btnCheckUser2.setBackground(new java.awt.Color(179, 159, 159));
        btnCheckUser2.setFont(new java.awt.Font("맑은 고딕", 1, 20)); // NOI18N
        btnCheckUser2.setForeground(new java.awt.Color(255, 255, 255));
        btnCheckUser2.setText("확인");
        btnCheckUser2.setBorder(null);
        btnCheckUser2.setFocusPainted(false);
        btnCheckUser2.setMargin(new java.awt.Insets(0, 0, 0, 0));

        jLabel16.setText("~");

        labbb2.setFont(new java.awt.Font("맑은 고딕", 1, 20)); // NOI18N
        labbb2.setText("분담내용");

        tfProjectDivi.setFont(new java.awt.Font("맑은 고딕", 1, 21)); // NOI18N
        tfProjectDivi.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        tfProjectDivi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfProjectDiviActionPerformed(evt);
            }
        });

        btnProjectDelete.setFont(new java.awt.Font("맑은 고딕", 1, 20)); // NOI18N
        btnProjectDelete.setForeground(new java.awt.Color(153, 153, 153));
        btnProjectDelete.setText("삭제");
        btnProjectDelete.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        btnProjectDelete.setFocusPainted(false);
        btnProjectDelete.setMargin(new java.awt.Insets(0, 0, 0, 0));

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnProjectDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel21Layout.createSequentialGroup()
                            .addComponent(labbb2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tfProjectDivi, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel21Layout.createSequentialGroup()
                            .addComponent(btnEditProjectResult, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEditProjectClose, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(tfEditProjectTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel21Layout.createSequentialGroup()
                            .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(labbb1)
                                .addComponent(jLabel20))
                            .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel21Layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel16)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(spEndDateSet1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel21Layout.createSequentialGroup()
                                    .addGap(36, 36, 36)
                                    .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(spStartDateSet1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(tfShareUserSet1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnCheckUser2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addComponent(tfEditProjectCon, javax.swing.GroupLayout.Alignment.TRAILING)))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(tfEditProjectTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tfEditProjectCon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labbb2)
                    .addComponent(tfProjectDivi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labbb1)
                    .addComponent(spStartDateSet1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(spEndDateSet1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(tfShareUserSet1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCheckUser2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnProjectDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditProjectResult, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditProjectClose, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55))
        );

        javax.swing.GroupLayout dlEditProjectLayout = new javax.swing.GroupLayout(dlEditProject.getContentPane());
        dlEditProject.getContentPane().setLayout(dlEditProjectLayout);
        dlEditProjectLayout.setHorizontalGroup(
            dlEditProjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        dlEditProjectLayout.setVerticalGroup(
            dlEditProjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlEditProjectLayout.createSequentialGroup()
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 28, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ToDoList");
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);
        getContentPane().setLayout(null);

        panel.setBackground(new java.awt.Color(255, 255, 255));
        panel.setLayout(null);

        jPanel1.setBackground(new java.awt.Color(241, 244, 247));
        jPanel1.setLayout(new java.awt.BorderLayout(20, 20));

        jPanel10.setLayout(new java.awt.GridLayout(1, 2));

        jPanel11.setBackground(new java.awt.Color(241, 244, 247));

        plProfileBox.setBackground(new java.awt.Color(241, 244, 247));
        plProfileBox.setPreferredSize(new java.awt.Dimension(130, 130));
        plProfileBox.setLayout(new java.awt.BorderLayout());

        lbProf.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        plProfileBox.add(lbProf, java.awt.BorderLayout.CENTER);

        lbName.setFont(new java.awt.Font("맑은 고딕", 1, 24)); // NOI18N
        lbName.setForeground(new java.awt.Color(142, 142, 142));
        lbName.setText("NAME");

        lbUserId.setFont(new java.awt.Font("맑은 고딕", 0, 20)); // NOI18N
        lbUserId.setForeground(new java.awt.Color(142, 142, 142));
        lbUserId.setText("아이디");

        btnUserEdit.setBackground(new java.awt.Color(216, 223, 231));
        btnUserEdit.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        btnUserEdit.setForeground(new java.awt.Color(255, 255, 255));
        btnUserEdit.setText("EDIT");
        btnUserEdit.setBorderPainted(false);
        btnUserEdit.setFocusPainted(false);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(plProfileBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbName, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUserEdit)
                    .addComponent(lbUserId))
                .addContainerGap(67, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap(51, Short.MAX_VALUE)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(lbName, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbUserId)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnUserEdit))
                    .addComponent(plProfileBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );

        jPanel10.add(jPanel11);

        jPanel1.add(jPanel10, java.awt.BorderLayout.NORTH);

        jPanel4.setBackground(new java.awt.Color(241, 244, 247));

        lbTodoBtn.setFont(new java.awt.Font("맑은 고딕", 1, 24)); // NOI18N
        lbTodoBtn.setForeground(new java.awt.Color(90, 90, 90));
        lbTodoBtn.setText("오늘 할 일");

        lbNextTodoBtn.setFont(new java.awt.Font("맑은 고딕", 1, 24)); // NOI18N
        lbNextTodoBtn.setForeground(new java.awt.Color(90, 90, 90));
        lbNextTodoBtn.setText("모든 할 일");

        lbProjectBtn.setFont(new java.awt.Font("맑은 고딕", 1, 24)); // NOI18N
        lbProjectBtn.setForeground(new java.awt.Color(252, 124, 116));
        lbProjectBtn.setText("프로젝트");

        btnAddTodo.setBackground(new java.awt.Color(241, 244, 247));
        btnAddTodo.setPreferredSize(new java.awt.Dimension(68, 68));
        btnAddTodo.setLayout(new java.awt.BorderLayout());

        lbHome.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnAddTodo.add(lbHome, java.awt.BorderLayout.CENTER);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(288, 240));

        jLabel11.setBackground(new java.awt.Color(241, 244, 247));
        jLabel11.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(171, 171, 171));
        jLabel11.setText("카테고리");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel11)
                .addContainerGap(200, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addContainerGap(202, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbTodoBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbNextTodoBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddTodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbProjectBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(71, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(lbTodoBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbNextTodoBtn)
                .addGap(18, 18, 18)
                .addComponent(lbProjectBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnAddTodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
        );

        jPanel1.add(jPanel4, java.awt.BorderLayout.CENTER);

        panel.add(jPanel1);
        jPanel1.setBounds(0, 0, 430, 800);

        plMain.setPreferredSize(new java.awt.Dimension(770, 800));
        plMain.setLayout(new java.awt.CardLayout());

        plCalendar.setBackground(new java.awt.Color(255, 255, 255));
        plCalendar.setLayout(new java.awt.BorderLayout());

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jPanel58.setBackground(new java.awt.Color(244, 244, 244));

        tfSearch.setFont(new java.awt.Font("맑은 고딕", 0, 24)); // NOI18N
        tfSearch.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tfSearch.setBorder(null);
        tfSearch.setMargin(new java.awt.Insets(2, 15, 2, 15));
        tfSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfSearchActionPerformed(evt);
            }
        });

        btnSearch.setBackground(new java.awt.Color(236, 108, 70));
        btnSearch.setBorder(null);
        btnSearch.setBorderPainted(false);
        btnSearch.setFocusPainted(false);

        javax.swing.GroupLayout jPanel58Layout = new javax.swing.GroupLayout(jPanel58);
        jPanel58.setLayout(jPanel58Layout);
        jPanel58Layout.setHorizontalGroup(
            jPanel58Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel58Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE))
        );
        jPanel58Layout.setVerticalGroup(
            jPanel58Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel58Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(tfSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                .addGap(2, 2, 2))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addComponent(jPanel58, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(119, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(jPanel58, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1))
        );

        plCalendar.add(jPanel3, java.awt.BorderLayout.CENTER);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setLayout(new java.awt.BorderLayout());

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 20));

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setLayout(new java.awt.BorderLayout());

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 0, 0));

        lbYear.setFont(new java.awt.Font("Yu Gothic UI", 0, 24)); // NOI18N
        lbYear.setForeground(new java.awt.Color(153, 153, 153));
        lbYear.setText("0000");
        jPanel8.add(lbYear);

        jPanel7.add(jPanel8, java.awt.BorderLayout.NORTH);

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 0));

        btnFirst.setBorderPainted(false);
        jPanel9.add(btnFirst);

        btnPrev.setBorderPainted(false);
        jPanel9.add(btnPrev);

        lbMonth.setFont(new java.awt.Font("Yu Gothic UI", 0, 48)); // NOI18N
        lbMonth.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbMonth.setText(" 00 ");
        jPanel9.add(lbMonth);

        btnNext.setBorderPainted(false);
        jPanel9.add(btnNext);

        btnLast.setBorderPainted(false);
        jPanel9.add(btnLast);

        jPanel7.add(jPanel9, java.awt.BorderLayout.CENTER);

        jPanel6.add(jPanel7);

        jPanel5.add(jPanel6, java.awt.BorderLayout.NORTH);

        plDay.setBackground(new java.awt.Color(255, 255, 255));

        jPanel39.setBackground(new java.awt.Color(255, 255, 255));
        jPanel39.setLayout(new java.awt.GridLayout(1, 7, 2, 2));

        jPanel42.setBackground(new java.awt.Color(255, 255, 255));
        jPanel42.setPreferredSize(new java.awt.Dimension(90, 50));
        jPanel42.setLayout(new java.awt.BorderLayout());

        jLabel2.setFont(new java.awt.Font("맑은 고딕", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(216, 120, 106));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("일");
        jPanel42.add(jLabel2, java.awt.BorderLayout.CENTER);

        jPanel39.add(jPanel42);

        jPanel43.setBackground(new java.awt.Color(255, 255, 255));
        jPanel43.setPreferredSize(new java.awt.Dimension(90, 50));
        jPanel43.setLayout(new java.awt.BorderLayout());

        jLabel3.setFont(new java.awt.Font("맑은 고딕", 1, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("월");
        jPanel43.add(jLabel3, java.awt.BorderLayout.CENTER);

        jPanel39.add(jPanel43);

        jPanel37.setBackground(new java.awt.Color(255, 255, 255));
        jPanel37.setPreferredSize(new java.awt.Dimension(90, 50));
        jPanel37.setLayout(new java.awt.BorderLayout());

        jLabel4.setFont(new java.awt.Font("맑은 고딕", 1, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("화");
        jPanel37.add(jLabel4, java.awt.BorderLayout.CENTER);

        jPanel39.add(jPanel37);

        jPanel56.setBackground(new java.awt.Color(255, 255, 255));
        jPanel56.setPreferredSize(new java.awt.Dimension(90, 50));
        jPanel56.setLayout(new java.awt.BorderLayout());

        jLabel7.setFont(new java.awt.Font("맑은 고딕", 1, 24)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("수");
        jPanel56.add(jLabel7, java.awt.BorderLayout.CENTER);

        jPanel39.add(jPanel56);

        jPanel57.setBackground(new java.awt.Color(255, 255, 255));
        jPanel57.setPreferredSize(new java.awt.Dimension(90, 50));
        jPanel57.setLayout(new java.awt.BorderLayout());

        jLabel8.setFont(new java.awt.Font("맑은 고딕", 1, 24)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("목");
        jPanel57.add(jLabel8, java.awt.BorderLayout.CENTER);

        jPanel39.add(jPanel57);

        jPanel41.setBackground(new java.awt.Color(255, 255, 255));
        jPanel41.setPreferredSize(new java.awt.Dimension(90, 50));
        jPanel41.setLayout(new java.awt.BorderLayout());

        jLabel5.setFont(new java.awt.Font("맑은 고딕", 1, 24)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("금");
        jPanel41.add(jLabel5, java.awt.BorderLayout.CENTER);

        jPanel39.add(jPanel41);

        jPanel40.setBackground(new java.awt.Color(255, 255, 255));
        jPanel40.setPreferredSize(new java.awt.Dimension(90, 50));
        jPanel40.setLayout(new java.awt.BorderLayout());

        jLabel6.setFont(new java.awt.Font("맑은 고딕", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(30, 108, 192));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("토");
        jPanel40.add(jLabel6, java.awt.BorderLayout.CENTER);

        jPanel39.add(jPanel40);

        plDay.add(jPanel39);

        jPanel5.add(plDay, java.awt.BorderLayout.CENTER);

        calenderPanel.setBackground(new java.awt.Color(255, 255, 255));
        calenderPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 1, 20));

        plCal.setBackground(new java.awt.Color(255, 255, 255));
        plCal.setLayout(new java.awt.GridLayout(6, 7, 2, 2));

        plC1.setBackground(new java.awt.Color(255, 255, 255));
        plC1.setPreferredSize(new java.awt.Dimension(90, 70));
        plC1.setLayout(new java.awt.BorderLayout());

        lbC1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC1.setForeground(new java.awt.Color(102, 102, 102));
        lbC1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC1.add(lbC1, java.awt.BorderLayout.CENTER);

        plCal.add(plC1);

        plC2.setBackground(new java.awt.Color(255, 255, 255));
        plC2.setPreferredSize(new java.awt.Dimension(90, 70));
        plC2.setLayout(new java.awt.BorderLayout());

        lbC2.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC2.setForeground(new java.awt.Color(102, 102, 102));
        lbC2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC2.add(lbC2, java.awt.BorderLayout.CENTER);

        plCal.add(plC2);

        plC3.setBackground(new java.awt.Color(255, 255, 255));
        plC3.setPreferredSize(new java.awt.Dimension(90, 70));
        plC3.setLayout(new java.awt.BorderLayout());

        lbC3.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC3.setForeground(new java.awt.Color(102, 102, 102));
        lbC3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC3.add(lbC3, java.awt.BorderLayout.CENTER);

        plCal.add(plC3);

        plC4.setBackground(new java.awt.Color(255, 255, 255));
        plC4.setPreferredSize(new java.awt.Dimension(90, 70));
        plC4.setLayout(new java.awt.BorderLayout());

        lbC4.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC4.setForeground(new java.awt.Color(102, 102, 102));
        lbC4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC4.add(lbC4, java.awt.BorderLayout.CENTER);

        plCal.add(plC4);

        plC5.setBackground(new java.awt.Color(255, 255, 255));
        plC5.setPreferredSize(new java.awt.Dimension(90, 70));
        plC5.setLayout(new java.awt.BorderLayout());

        lbC5.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC5.setForeground(new java.awt.Color(102, 102, 102));
        lbC5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC5.add(lbC5, java.awt.BorderLayout.CENTER);

        plCal.add(plC5);

        plC6.setBackground(new java.awt.Color(255, 255, 255));
        plC6.setPreferredSize(new java.awt.Dimension(90, 70));
        plC6.setLayout(new java.awt.BorderLayout());

        lbC6.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC6.setForeground(new java.awt.Color(102, 102, 102));
        lbC6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC6.add(lbC6, java.awt.BorderLayout.CENTER);

        plCal.add(plC6);

        plC7.setBackground(new java.awt.Color(255, 255, 255));
        plC7.setPreferredSize(new java.awt.Dimension(90, 70));
        plC7.setLayout(new java.awt.BorderLayout());

        lbC7.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC7.setForeground(new java.awt.Color(102, 102, 102));
        lbC7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC7.add(lbC7, java.awt.BorderLayout.CENTER);

        plCal.add(plC7);

        plC8.setBackground(new java.awt.Color(255, 255, 255));
        plC8.setPreferredSize(new java.awt.Dimension(90, 70));
        plC8.setLayout(new java.awt.BorderLayout());

        lbC8.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC8.setForeground(new java.awt.Color(102, 102, 102));
        lbC8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC8.add(lbC8, java.awt.BorderLayout.CENTER);

        plCal.add(plC8);

        plC9.setBackground(new java.awt.Color(255, 255, 255));
        plC9.setPreferredSize(new java.awt.Dimension(90, 70));
        plC9.setLayout(new java.awt.BorderLayout());

        lbC9.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC9.setForeground(new java.awt.Color(102, 102, 102));
        lbC9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC9.add(lbC9, java.awt.BorderLayout.CENTER);

        plCal.add(plC9);

        plC10.setBackground(new java.awt.Color(255, 255, 255));
        plC10.setPreferredSize(new java.awt.Dimension(90, 70));
        plC10.setLayout(new java.awt.BorderLayout());

        lbC10.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC10.setForeground(new java.awt.Color(102, 102, 102));
        lbC10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC10.add(lbC10, java.awt.BorderLayout.CENTER);

        plCal.add(plC10);

        plC11.setBackground(new java.awt.Color(255, 255, 255));
        plC11.setPreferredSize(new java.awt.Dimension(90, 70));
        plC11.setLayout(new java.awt.BorderLayout());

        lbC11.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC11.setForeground(new java.awt.Color(102, 102, 102));
        lbC11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC11.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC11.add(lbC11, java.awt.BorderLayout.CENTER);

        plCal.add(plC11);

        plC12.setBackground(new java.awt.Color(255, 255, 255));
        plC12.setPreferredSize(new java.awt.Dimension(90, 70));
        plC12.setLayout(new java.awt.BorderLayout());

        lbC12.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC12.setForeground(new java.awt.Color(102, 102, 102));
        lbC12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC12.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC12.add(lbC12, java.awt.BorderLayout.CENTER);

        plCal.add(plC12);

        plC13.setBackground(new java.awt.Color(255, 255, 255));
        plC13.setPreferredSize(new java.awt.Dimension(90, 70));
        plC13.setLayout(new java.awt.BorderLayout());

        lbC13.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC13.setForeground(new java.awt.Color(102, 102, 102));
        lbC13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC13.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC13.add(lbC13, java.awt.BorderLayout.CENTER);

        plCal.add(plC13);

        plC14.setBackground(new java.awt.Color(255, 255, 255));
        plC14.setPreferredSize(new java.awt.Dimension(90, 70));
        plC14.setLayout(new java.awt.BorderLayout());

        lbC14.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC14.setForeground(new java.awt.Color(102, 102, 102));
        lbC14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC14.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC14.add(lbC14, java.awt.BorderLayout.CENTER);

        plCal.add(plC14);

        plC15.setBackground(new java.awt.Color(255, 255, 255));
        plC15.setPreferredSize(new java.awt.Dimension(90, 70));
        plC15.setLayout(new java.awt.BorderLayout());

        lbC15.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC15.setForeground(new java.awt.Color(102, 102, 102));
        lbC15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC15.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC15.add(lbC15, java.awt.BorderLayout.CENTER);

        plCal.add(plC15);

        plC16.setBackground(new java.awt.Color(255, 255, 255));
        plC16.setPreferredSize(new java.awt.Dimension(90, 70));
        plC16.setLayout(new java.awt.BorderLayout());

        lbC16.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC16.setForeground(new java.awt.Color(102, 102, 102));
        lbC16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC16.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC16.add(lbC16, java.awt.BorderLayout.CENTER);

        plCal.add(plC16);

        plC17.setBackground(new java.awt.Color(255, 255, 255));
        plC17.setPreferredSize(new java.awt.Dimension(90, 70));
        plC17.setLayout(new java.awt.BorderLayout());

        lbC17.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC17.setForeground(new java.awt.Color(102, 102, 102));
        lbC17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC17.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC17.add(lbC17, java.awt.BorderLayout.CENTER);

        plCal.add(plC17);

        plC18.setBackground(new java.awt.Color(255, 255, 255));
        plC18.setPreferredSize(new java.awt.Dimension(90, 70));
        plC18.setLayout(new java.awt.BorderLayout());

        lbC18.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC18.setForeground(new java.awt.Color(102, 102, 102));
        lbC18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC18.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC18.add(lbC18, java.awt.BorderLayout.CENTER);

        plCal.add(plC18);

        plC19.setBackground(new java.awt.Color(255, 255, 255));
        plC19.setPreferredSize(new java.awt.Dimension(90, 70));
        plC19.setLayout(new java.awt.BorderLayout());

        lbC19.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC19.setForeground(new java.awt.Color(102, 102, 102));
        lbC19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC19.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC19.add(lbC19, java.awt.BorderLayout.CENTER);

        plCal.add(plC19);

        plC20.setBackground(new java.awt.Color(255, 255, 255));
        plC20.setPreferredSize(new java.awt.Dimension(90, 70));
        plC20.setLayout(new java.awt.BorderLayout());

        lbC20.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC20.setForeground(new java.awt.Color(102, 102, 102));
        lbC20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC20.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC20.add(lbC20, java.awt.BorderLayout.CENTER);

        plCal.add(plC20);

        plC21.setBackground(new java.awt.Color(255, 255, 255));
        plC21.setPreferredSize(new java.awt.Dimension(90, 70));
        plC21.setLayout(new java.awt.BorderLayout());

        lbC21.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC21.setForeground(new java.awt.Color(102, 102, 102));
        lbC21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC21.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC21.add(lbC21, java.awt.BorderLayout.CENTER);

        plCal.add(plC21);

        plC22.setBackground(new java.awt.Color(255, 255, 255));
        plC22.setPreferredSize(new java.awt.Dimension(90, 70));
        plC22.setLayout(new java.awt.BorderLayout());

        lbC22.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC22.setForeground(new java.awt.Color(102, 102, 102));
        lbC22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC22.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC22.add(lbC22, java.awt.BorderLayout.CENTER);

        plCal.add(plC22);

        plC23.setBackground(new java.awt.Color(255, 255, 255));
        plC23.setPreferredSize(new java.awt.Dimension(90, 70));
        plC23.setLayout(new java.awt.BorderLayout());

        lbC23.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC23.setForeground(new java.awt.Color(102, 102, 102));
        lbC23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC23.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC23.add(lbC23, java.awt.BorderLayout.CENTER);

        plCal.add(plC23);

        plC24.setBackground(new java.awt.Color(255, 255, 255));
        plC24.setPreferredSize(new java.awt.Dimension(90, 70));
        plC24.setLayout(new java.awt.BorderLayout());

        lbC24.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC24.setForeground(new java.awt.Color(102, 102, 102));
        lbC24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC24.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC24.add(lbC24, java.awt.BorderLayout.CENTER);

        plCal.add(plC24);

        plC25.setBackground(new java.awt.Color(255, 255, 255));
        plC25.setPreferredSize(new java.awt.Dimension(90, 70));
        plC25.setLayout(new java.awt.BorderLayout());

        lbC25.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC25.setForeground(new java.awt.Color(102, 102, 102));
        lbC25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC25.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC25.add(lbC25, java.awt.BorderLayout.CENTER);

        plCal.add(plC25);

        plC26.setBackground(new java.awt.Color(255, 255, 255));
        plC26.setPreferredSize(new java.awt.Dimension(90, 70));
        plC26.setLayout(new java.awt.BorderLayout());

        lbC26.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC26.setForeground(new java.awt.Color(102, 102, 102));
        lbC26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC26.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC26.add(lbC26, java.awt.BorderLayout.CENTER);

        plCal.add(plC26);

        plC27.setBackground(new java.awt.Color(255, 255, 255));
        plC27.setPreferredSize(new java.awt.Dimension(90, 70));
        plC27.setLayout(new java.awt.BorderLayout());

        lbC27.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC27.setForeground(new java.awt.Color(102, 102, 102));
        lbC27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC27.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC27.add(lbC27, java.awt.BorderLayout.CENTER);

        plCal.add(plC27);

        plC28.setBackground(new java.awt.Color(255, 255, 255));
        plC28.setPreferredSize(new java.awt.Dimension(90, 70));
        plC28.setLayout(new java.awt.BorderLayout());

        lbC28.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC28.setForeground(new java.awt.Color(102, 102, 102));
        lbC28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC28.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC28.add(lbC28, java.awt.BorderLayout.CENTER);

        plCal.add(plC28);

        plC29.setBackground(new java.awt.Color(255, 255, 255));
        plC29.setPreferredSize(new java.awt.Dimension(90, 70));
        plC29.setLayout(new java.awt.BorderLayout());

        lbC29.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC29.setForeground(new java.awt.Color(102, 102, 102));
        lbC29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC29.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC29.add(lbC29, java.awt.BorderLayout.CENTER);

        plCal.add(plC29);

        plC30.setBackground(new java.awt.Color(255, 255, 255));
        plC30.setPreferredSize(new java.awt.Dimension(90, 70));
        plC30.setLayout(new java.awt.BorderLayout());

        lbC30.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC30.setForeground(new java.awt.Color(102, 102, 102));
        lbC30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC30.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC30.add(lbC30, java.awt.BorderLayout.CENTER);

        plCal.add(plC30);

        plC31.setBackground(new java.awt.Color(255, 255, 255));
        plC31.setPreferredSize(new java.awt.Dimension(90, 70));
        plC31.setLayout(new java.awt.BorderLayout());

        lbC31.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC31.setForeground(new java.awt.Color(102, 102, 102));
        lbC31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC31.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC31.add(lbC31, java.awt.BorderLayout.CENTER);

        plCal.add(plC31);

        plC32.setBackground(new java.awt.Color(255, 255, 255));
        plC32.setPreferredSize(new java.awt.Dimension(90, 70));
        plC32.setLayout(new java.awt.BorderLayout());

        lbC32.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC32.setForeground(new java.awt.Color(102, 102, 102));
        lbC32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC32.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC32.add(lbC32, java.awt.BorderLayout.CENTER);

        plCal.add(plC32);

        plC33.setBackground(new java.awt.Color(255, 255, 255));
        plC33.setPreferredSize(new java.awt.Dimension(90, 70));
        plC33.setLayout(new java.awt.BorderLayout());

        lbC33.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC33.setForeground(new java.awt.Color(102, 102, 102));
        lbC33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC33.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC33.add(lbC33, java.awt.BorderLayout.CENTER);

        plCal.add(plC33);

        plC34.setBackground(new java.awt.Color(255, 255, 255));
        plC34.setPreferredSize(new java.awt.Dimension(90, 70));
        plC34.setLayout(new java.awt.BorderLayout());

        lbC34.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC34.setForeground(new java.awt.Color(102, 102, 102));
        lbC34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC34.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC34.add(lbC34, java.awt.BorderLayout.CENTER);

        plCal.add(plC34);

        plC35.setBackground(new java.awt.Color(255, 255, 255));
        plC35.setPreferredSize(new java.awt.Dimension(90, 70));
        plC35.setLayout(new java.awt.BorderLayout());

        lbC35.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC35.setForeground(new java.awt.Color(102, 102, 102));
        lbC35.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC35.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC35.add(lbC35, java.awt.BorderLayout.CENTER);

        plCal.add(plC35);

        plC36.setBackground(new java.awt.Color(255, 255, 255));
        plC36.setPreferredSize(new java.awt.Dimension(90, 70));
        plC36.setLayout(new java.awt.BorderLayout());

        lbC36.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC36.setForeground(new java.awt.Color(102, 102, 102));
        lbC36.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC36.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC36.add(lbC36, java.awt.BorderLayout.CENTER);

        plCal.add(plC36);

        plC37.setBackground(new java.awt.Color(255, 255, 255));
        plC37.setPreferredSize(new java.awt.Dimension(90, 70));
        plC37.setLayout(new java.awt.BorderLayout());

        lbC37.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC37.setForeground(new java.awt.Color(102, 102, 102));
        lbC37.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC37.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC37.add(lbC37, java.awt.BorderLayout.CENTER);

        plCal.add(plC37);

        plC38.setBackground(new java.awt.Color(255, 255, 255));
        plC38.setPreferredSize(new java.awt.Dimension(90, 70));
        plC38.setLayout(new java.awt.BorderLayout());

        lbC38.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC38.setForeground(new java.awt.Color(102, 102, 102));
        lbC38.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC38.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC38.add(lbC38, java.awt.BorderLayout.CENTER);

        plCal.add(plC38);

        plC39.setBackground(new java.awt.Color(255, 255, 255));
        plC39.setPreferredSize(new java.awt.Dimension(90, 70));
        plC39.setLayout(new java.awt.BorderLayout());

        lbC39.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC39.setForeground(new java.awt.Color(102, 102, 102));
        lbC39.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC39.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC39.add(lbC39, java.awt.BorderLayout.CENTER);

        plCal.add(plC39);

        plC40.setBackground(new java.awt.Color(255, 255, 255));
        plC40.setPreferredSize(new java.awt.Dimension(90, 70));
        plC40.setLayout(new java.awt.BorderLayout());

        lbC40.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC40.setForeground(new java.awt.Color(102, 102, 102));
        lbC40.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC40.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC40.add(lbC40, java.awt.BorderLayout.CENTER);

        plCal.add(plC40);

        plC41.setBackground(new java.awt.Color(255, 255, 255));
        plC41.setPreferredSize(new java.awt.Dimension(90, 70));
        plC41.setLayout(new java.awt.BorderLayout());

        lbC41.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC41.setForeground(new java.awt.Color(102, 102, 102));
        lbC41.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC41.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC41.add(lbC41, java.awt.BorderLayout.CENTER);

        plCal.add(plC41);

        plC42.setBackground(new java.awt.Color(255, 255, 255));
        plC42.setPreferredSize(new java.awt.Dimension(90, 70));
        plC42.setLayout(new java.awt.BorderLayout());

        lbC42.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lbC42.setForeground(new java.awt.Color(102, 102, 102));
        lbC42.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbC42.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        plC42.add(lbC42, java.awt.BorderLayout.CENTER);

        plCal.add(plC42);

        calenderPanel.add(plCal);

        jPanel5.add(calenderPanel, java.awt.BorderLayout.PAGE_END);

        plCalendar.add(jPanel5, java.awt.BorderLayout.SOUTH);

        plMain.add(plCalendar, "1");

        plTodo.setBackground(new java.awt.Color(255, 255, 255));

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));

        jLabel12.setBackground(new java.awt.Color(183, 203, 198));
        jLabel12.setFont(new java.awt.Font("맑은 고딕", 1, 30)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(127, 143, 139));
        jLabel12.setText("오늘 할 일");

        lbToday.setFont(new java.awt.Font("Yu Gothic UI", 0, 20)); // NOI18N
        lbToday.setText("today");

        jScrollPane2.setBorder(null);

        todoList.setBackground(new java.awt.Color(248, 248, 248));
        todoList.setBorder(null);
        todoList.setFont(new java.awt.Font("맑은 고딕", 1, 20)); // NOI18N
        todoList.setForeground(new java.awt.Color(102, 102, 102));
        todoList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        todoList.setFocusable(false);
        todoList.setSelectionBackground(new java.awt.Color(127, 143, 139));
        todoList.setSelectionForeground(new java.awt.Color(255, 255, 255));
        jScrollPane2.setViewportView(todoList);

        jPanel13.setBackground(new java.awt.Color(248, 248, 248));

        tfAddTodo.setFont(new java.awt.Font("맑은 고딕", 0, 24)); // NOI18N
        tfAddTodo.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        tfAddTodo.setBorder(null);
        tfAddTodo.setMargin(new java.awt.Insets(2, 15, 2, 15));
        tfAddTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfAddTodoActionPerformed(evt);
            }
        });

        btnAddTodoList.setBackground(new java.awt.Color(248, 248, 248));
        btnAddTodoList.setBorder(null);
        btnAddTodoList.setFocusPainted(false);
        btnAddTodoList.setFocusable(false);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tfAddTodo, javax.swing.GroupLayout.DEFAULT_SIZE, 537, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAddTodoList, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tfAddTodo, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(btnAddTodoList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        btnCompletionTodo1.setBackground(new java.awt.Color(236, 108, 70));
        btnCompletionTodo1.setFont(new java.awt.Font("맑은 고딕", 1, 20)); // NOI18N
        btnCompletionTodo1.setForeground(new java.awt.Color(255, 255, 255));
        btnCompletionTodo1.setText("완료된 항목");
        btnCompletionTodo1.setBorder(null);
        btnCompletionTodo1.setBorderPainted(false);
        btnCompletionTodo1.setFocusPainted(false);
        btnCompletionTodo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompletionTodo1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(18, 18, 18)
                                .addComponent(lbToday)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnCompletionTodo1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnCompletionTodo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(lbToday)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );

        javax.swing.GroupLayout plTodoLayout = new javax.swing.GroupLayout(plTodo);
        plTodo.setLayout(plTodoLayout);
        plTodoLayout.setHorizontalGroup(
            plTodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plTodoLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67))
        );
        plTodoLayout.setVerticalGroup(
            plTodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, plTodoLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        plMain.add(plTodo, "2");

        plNextTodo.setBackground(new java.awt.Color(255, 255, 255));

        jPanel15.setBackground(new java.awt.Color(255, 255, 255));

        jLabel13.setBackground(new java.awt.Color(183, 203, 198));
        jLabel13.setFont(new java.awt.Font("맑은 고딕", 1, 30)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(139, 143, 127));
        jLabel13.setText("모든 할 일");

        jScrollPane3.setBorder(null);

        todoAllList.setBackground(new java.awt.Color(248, 248, 248));
        todoAllList.setBorder(null);
        todoAllList.setFont(new java.awt.Font("맑은 고딕", 1, 20)); // NOI18N
        todoAllList.setForeground(new java.awt.Color(102, 102, 102));
        todoAllList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        todoAllList.setFocusable(false);
        todoAllList.setSelectionBackground(new java.awt.Color(139, 143, 127));
        todoAllList.setSelectionForeground(new java.awt.Color(255, 255, 255));
        jScrollPane3.setViewportView(todoAllList);

        btnCompletionTodo2.setBackground(new java.awt.Color(236, 108, 70));
        btnCompletionTodo2.setFont(new java.awt.Font("맑은 고딕", 1, 20)); // NOI18N
        btnCompletionTodo2.setForeground(new java.awt.Color(255, 255, 255));
        btnCompletionTodo2.setText("완료된 항목");
        btnCompletionTodo2.setBorder(null);
        btnCompletionTodo2.setBorderPainted(false);
        btnCompletionTodo2.setFocusPainted(false);
        btnCompletionTodo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompletionTodo2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel13)
                .addGap(323, 323, 323)
                .addComponent(btnCompletionTodo2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnCompletionTodo2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 633, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );

        javax.swing.GroupLayout plNextTodoLayout = new javax.swing.GroupLayout(plNextTodo);
        plNextTodo.setLayout(plNextTodoLayout);
        plNextTodoLayout.setHorizontalGroup(
            plNextTodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plNextTodoLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67))
        );
        plNextTodoLayout.setVerticalGroup(
            plNextTodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, plNextTodoLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        plMain.add(plNextTodo, "3");

        plProject.setBackground(new java.awt.Color(255, 255, 255));

        plProjectBB.setPreferredSize(new java.awt.Dimension(652, 707));
        plProjectBB.setLayout(new java.awt.BorderLayout());

        jPanel18.setBackground(new java.awt.Color(135, 68, 101));

        jLabel14.setFont(new java.awt.Font("맑은 고딕", 1, 30)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("프로젝트");

        btnAddProject.setBackground(new java.awt.Color(135, 68, 101));
        btnAddProject.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 36)); // NOI18N
        btnAddProject.setForeground(new java.awt.Color(255, 255, 255));
        btnAddProject.setText("+++++");
        btnAddProject.setBorder(null);
        btnAddProject.setBorderPainted(false);
        btnAddProject.setFocusPainted(false);
        btnAddProject.setFocusable(false);
        btnAddProject.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAddProject.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnAddProject.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        btnAddProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddProjectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAddProject, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAddProject, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout plProjectLayout = new javax.swing.GroupLayout(plProject);
        plProject.setLayout(plProjectLayout);
        plProjectLayout.setHorizontalGroup(
            plProjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plProjectLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(plProjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(plProjectBB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(59, 59, 59))
        );
        plProjectLayout.setVerticalGroup(
            plProjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plProjectLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(plProjectBB, javax.swing.GroupLayout.PREFERRED_SIZE, 642, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58))
        );

        plMain.add(plProject, "4");

        panel.add(plMain);
        plMain.setBounds(430, 0, 770, 800);

        getContentPane().add(panel);
        panel.setBounds(0, 0, 1200, 800);

        jMenuBar1.setBackground(new java.awt.Color(254, 254, 254));
        jMenuBar1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(232, 232, 232)));

        jMenu1.setText("Info");
        jMenu1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfSearchActionPerformed

    private void tfAddTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfAddTodoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfAddTodoActionPerformed

    private void btnCompletionTodo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompletionTodo1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCompletionTodo1ActionPerformed

    private void tfEditTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfEditTodoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfEditTodoActionPerformed

    private void btnResult2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResult2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnResult2ActionPerformed

    private void btnEditCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditCloseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditCloseActionPerformed

    private void cbTodoResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTodoResultActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbTodoResultActionPerformed

    private void btnCompletionTodo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompletionTodo2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCompletionTodo2ActionPerformed

    private void btnAddProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddProjectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddProjectActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnAddResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddResultActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddResultActionPerformed

    private void tfAddProjectTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfAddProjectTitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfAddProjectTitleActionPerformed

    private void tfAddProjectConActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfAddProjectConActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfAddProjectConActionPerformed

    private void tfEditProjectTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfEditProjectTitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfEditProjectTitleActionPerformed

    private void tfEditProjectConActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfEditProjectConActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfEditProjectConActionPerformed

    private void btnEditProjectResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditProjectResultActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditProjectResultActionPerformed

    private void btnEditProjectCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditProjectCloseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditProjectCloseActionPerformed

    private void tfProjectDiviActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfProjectDiviActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfProjectDiviActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUI2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUI2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUI2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainGUI2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddProject;
    private javax.swing.JButton btnAddResult;
    private javax.swing.JPanel btnAddTodo;
    private javax.swing.JButton btnAddTodoList;
    private javax.swing.JButton btnCheckUser;
    private javax.swing.JButton btnCheckUser1;
    private javax.swing.JButton btnCheckUser2;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnCompletionTodo1;
    private javax.swing.JButton btnCompletionTodo2;
    private javax.swing.JButton btnEditClose;
    private javax.swing.JButton btnEditProjectClose;
    private javax.swing.JButton btnEditProjectResult;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnProjectDelete;
    private javax.swing.JButton btnResult2;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnTodoListDelete;
    private javax.swing.JButton btnUserEdit;
    private javax.swing.JPanel calenderPanel;
    private javax.swing.JCheckBox cbTodoResult;
    private javax.swing.JDialog dlAddProject;
    private javax.swing.JDialog dlCompletionTodo;
    private javax.swing.JDialog dlEditProject;
    private javax.swing.JDialog dlEditTodo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel37;
    private javax.swing.JPanel jPanel39;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel40;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel43;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel56;
    private javax.swing.JPanel jPanel57;
    private javax.swing.JPanel jPanel58;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel labbb;
    private javax.swing.JLabel labbb1;
    private javax.swing.JLabel labbb2;
    private javax.swing.JLabel lbC1;
    private javax.swing.JLabel lbC10;
    private javax.swing.JLabel lbC11;
    private javax.swing.JLabel lbC12;
    private javax.swing.JLabel lbC13;
    private javax.swing.JLabel lbC14;
    private javax.swing.JLabel lbC15;
    private javax.swing.JLabel lbC16;
    private javax.swing.JLabel lbC17;
    private javax.swing.JLabel lbC18;
    private javax.swing.JLabel lbC19;
    private javax.swing.JLabel lbC2;
    private javax.swing.JLabel lbC20;
    private javax.swing.JLabel lbC21;
    private javax.swing.JLabel lbC22;
    private javax.swing.JLabel lbC23;
    private javax.swing.JLabel lbC24;
    private javax.swing.JLabel lbC25;
    private javax.swing.JLabel lbC26;
    private javax.swing.JLabel lbC27;
    private javax.swing.JLabel lbC28;
    private javax.swing.JLabel lbC29;
    private javax.swing.JLabel lbC3;
    private javax.swing.JLabel lbC30;
    private javax.swing.JLabel lbC31;
    private javax.swing.JLabel lbC32;
    private javax.swing.JLabel lbC33;
    private javax.swing.JLabel lbC34;
    private javax.swing.JLabel lbC35;
    private javax.swing.JLabel lbC36;
    private javax.swing.JLabel lbC37;
    private javax.swing.JLabel lbC38;
    private javax.swing.JLabel lbC39;
    private javax.swing.JLabel lbC4;
    private javax.swing.JLabel lbC40;
    private javax.swing.JLabel lbC41;
    private javax.swing.JLabel lbC42;
    private javax.swing.JLabel lbC5;
    private javax.swing.JLabel lbC6;
    private javax.swing.JLabel lbC7;
    private javax.swing.JLabel lbC8;
    private javax.swing.JLabel lbC9;
    private javax.swing.JLabel lbHome;
    private javax.swing.JLabel lbMonth;
    private javax.swing.JLabel lbName;
    private javax.swing.JLabel lbNextTodoBtn;
    private javax.swing.JLabel lbProf;
    private javax.swing.JLabel lbProjectBtn;
    private javax.swing.JLabel lbToday;
    private javax.swing.JLabel lbTodoBtn;
    private javax.swing.JLabel lbUserId;
    private javax.swing.JLabel lbYear;
    private javax.swing.JPanel panel;
    private javax.swing.JPanel plC1;
    private javax.swing.JPanel plC10;
    private javax.swing.JPanel plC11;
    private javax.swing.JPanel plC12;
    private javax.swing.JPanel plC13;
    private javax.swing.JPanel plC14;
    private javax.swing.JPanel plC15;
    private javax.swing.JPanel plC16;
    private javax.swing.JPanel plC17;
    private javax.swing.JPanel plC18;
    private javax.swing.JPanel plC19;
    private javax.swing.JPanel plC2;
    private javax.swing.JPanel plC20;
    private javax.swing.JPanel plC21;
    private javax.swing.JPanel plC22;
    private javax.swing.JPanel plC23;
    private javax.swing.JPanel plC24;
    private javax.swing.JPanel plC25;
    private javax.swing.JPanel plC26;
    private javax.swing.JPanel plC27;
    private javax.swing.JPanel plC28;
    private javax.swing.JPanel plC29;
    private javax.swing.JPanel plC3;
    private javax.swing.JPanel plC30;
    private javax.swing.JPanel plC31;
    private javax.swing.JPanel plC32;
    private javax.swing.JPanel plC33;
    private javax.swing.JPanel plC34;
    private javax.swing.JPanel plC35;
    private javax.swing.JPanel plC36;
    private javax.swing.JPanel plC37;
    private javax.swing.JPanel plC38;
    private javax.swing.JPanel plC39;
    private javax.swing.JPanel plC4;
    private javax.swing.JPanel plC40;
    private javax.swing.JPanel plC41;
    private javax.swing.JPanel plC42;
    private javax.swing.JPanel plC5;
    private javax.swing.JPanel plC6;
    private javax.swing.JPanel plC7;
    private javax.swing.JPanel plC8;
    private javax.swing.JPanel plC9;
    private javax.swing.JPanel plCal;
    private javax.swing.JPanel plCalendar;
    private javax.swing.JPanel plDay;
    private javax.swing.JPanel plMain;
    private javax.swing.JPanel plNextTodo;
    private javax.swing.JPanel plProfileBox;
    private javax.swing.JPanel plProject;
    private javax.swing.JPanel plProjectBB;
    private javax.swing.JPanel plTodo;
    private javax.swing.JSpinner spDateSelect;
    private javax.swing.JSpinner spEndDateSet;
    private javax.swing.JSpinner spEndDateSet1;
    private javax.swing.JSpinner spStartDateSet;
    private javax.swing.JSpinner spStartDateSet1;
    private javax.swing.JTextField tfAddProjectCon;
    private javax.swing.JTextField tfAddProjectTitle;
    private javax.swing.JTextField tfAddTodo;
    private javax.swing.JTextField tfEditProjectCon;
    private javax.swing.JTextField tfEditProjectTitle;
    private javax.swing.JTextField tfEditTodo;
    private javax.swing.JTextField tfProjectDivi;
    private javax.swing.JTextField tfSearch;
    private javax.swing.JTextField tfShareUser;
    private javax.swing.JTextField tfShareUserSet;
    private javax.swing.JTextField tfShareUserSet1;
    private javax.swing.JList<String> todoAllList;
    private javax.swing.JList<String> todoCompletionList;
    private javax.swing.JList<String> todoList;
    // End of variables declaration//GEN-END:variables
    JPanel plProjectBox = new JPanel(new GridLayout(0, 1));
    JScrollPane spProject;

    private void init() {
        setSize(1225, 905);
        setLocationRelativeTo(null);
        userListDAO = new UserListDAO();
        todoListDAO = new TodoListDAO();
        todoListShareDAO = new TodoListShareDAO();
        projectListDAO = new ProjectListDAO();
        projectShareDAO = new ProjectShareDAO();
        sdf = new SimpleDateFormat("yyyy-MM-dd");



        //CardLayout Set
        cardLayoutSet();

        //ToDoList Panel set
        try {
            //ProjectList Panel set
            projectListUpdate();

            //ToDoList Panel set
            todoListSet();

            //ToDoAllList Panel set
            todoListAllUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }


        //Project리스트 담아내기
        projectBoxSet();

        //할 일 추가버튼 디자인
        CircleGraphic circleGraphic = new CircleGraphic();
        btnAddTodo.add(circleGraphic);

        //이미지 set
        try {
            imgSet();
        } catch (IOException e) {
            e.printStackTrace();
        }

        //오늘 날짜 갱신(최초 1회만)
        try {
            currentDate = DateUtil.toDate();
        } catch (ParseException e) {
            e.printStackTrace();
        }

        btnSetDesign();

        //캘린더 초기화
        calenderStart();
        dateRelease(currentDate);
    }

    private void projectBoxSet() {
        plProjectBB.removeAll();

        //리스트 패널을 담는 패널
        plProjectBox = new JPanel(new GridLayout(0, 1));
        plProjectBox.setBackground(new Color(255,255,255));

        //scrollPane에 리스트를 담은 패널을 넣어준다
        spProject = new JScrollPane(plProjectBox);
        //커스텀
        spProject.getViewport().setBackground(new Color(255,255,255));
        spProject.setBorder(BorderFactory.createEmptyBorder());
        spProject.getVerticalScrollBar().setUnitIncrement(16);
        spProject.getVerticalScrollBar().setBackground(Color.WHITE);
        spProject.getVerticalScrollBar().setUI(new BasicScrollBarUI() {
            @Override
            protected void configureScrollBarColors() {
                this.thumbColor = new Color(234, 234, 234);
            }

            @Override
            protected JButton createIncreaseButton(int orientation) {
                JButton downBtn = new JButton("▼");
                downBtn.setBorderPainted(false);
                downBtn.setFocusPainted(false);
                downBtn.setBorder(BorderFactory.createEmptyBorder());
                downBtn.setBackground(Color.BLACK);
                downBtn.setForeground(Color.WHITE);

                return downBtn;
            }

            @Override
            protected JButton createDecreaseButton(int orientation) {
                JButton upBtn = new JButton("▲");
                upBtn.setBorderPainted(false);
                upBtn.setFocusPainted(false);
                upBtn.setBorder(BorderFactory.createEmptyBorder());
                upBtn.setBackground(Color.BLACK);
                upBtn.setForeground(Color.WHITE);

                return upBtn;
            }
        });

        plProjectBB.add(spProject);

        //리스트 패널을 자신이 가지고 있는 프로젝트 개수만큼 업데이트한다
        for (ProjectListDTO projectListDTO : projectListDTOList) {
            JPanel pPanel = new ProjectListPanel(projectListDTO);
            pPanel.setPreferredSize(new Dimension(spProject.getPreferredSize().width, 176));
            pPanel.setMaximumSize(new Dimension(spProject.getMaximumSize().width, 176));
            plProjectBox.add(pPanel);
        }
    }

    private void projectListUpdate() throws SQLException {
        projectListDTOList = projectListDAO.selectAll("N");

//        for (ProjectListDTO projectListDTO : projectListDTOList) {
//            JPanel pPanel = new ProjectListPanel(projectListDTO);
//            pPanel.setPreferredSize(new Dimension(spProject.getPreferredSize().width, 176));
//            pPanel.setMaximumSize(new Dimension(spProject.getMaximumSize().width, 176));
//            plProjectBox.add(pPanel);
//        }
    }

    //todoList 패널 set
    private void todoListSet() throws SQLException {
//        spList.getViewport().setBackground(new Color(243,252,250));
        lbToday.setText(DateUtil.toStringDate());

        //할 일 리스트 초기화
        todoListUpdate();
    }

    //완료된 할 일 리스트 초기화 메서드
    private void todoCompletionSet() throws SQLException {
        List<TodoListDTO> list = todoListDAO.selectAll("Y");
        Vector<String> conList = new Vector<>();

        for(TodoListDTO dto : list)
            conList.add(dto.getListContent());

        todoCompletionList.setListData(conList);
    }

    //할 일 리스트 초기화 메서드
    private void todoListUpdate() throws SQLException {
        List<TodoListDTO> list = todoListDAO.selectAll("N");
        List<TodoListDTO> resultList = new ArrayList<>();
        for (TodoListDTO dto : list) {
            Date time = new Date(dto.getListDate().getTime());
            Date today = new Date();
            if (sdf.format(time).equals(sdf.format(today))) resultList.add(dto);
        }
        Vector<String> conList = new Vector<>();

        for (TodoListDTO dto : resultList)
            conList.add(dto.getListContent());

        todoList.setListData(conList);
    }

    private void todoListAllUpdate() throws SQLException {
        List<TodoListDTO> list = todoListDAO.selectAll("N");
        Vector<String> conList = new Vector<>();

        for (TodoListDTO dto : list)
            conList.add(dto.getListContent());

        todoAllList.setListData(conList);
    }

    private void cardLayoutSet() {
        cardLayout = new CardLayout();
        plMain.setLayout(cardLayout);

        plMain.add("1", plCalendar);
        plMain.add("2", plTodo);
        plMain.add("3", plNextTodo);
        plMain.add("4", plProject);

        cardLayout.show(plMain, "1");
    }


    //캘린더 초기화 메서드
    private void calenderStart() {
        //캘린더의 빈공간은 -1로 구분
        dayArr = new int[][]{
                {-1, -1, -1, -1, -1, -1, -1},
                {-1, -1, -1, -1, -1, -1, -1},
                {-1, -1, -1, -1, -1, -1, -1},
                {-1, -1, -1, -1, -1, -1, -1},
                {-1, -1, -1, -1, -1, -1, -1},
                {-1, -1, -1, -1, -1, -1, -1}
        };

        //캘린더Panel 속 '일자 Panel'를 관리하기 편하도록 다차원 배열에 담는다
        dayList = new JLabel[][]{
                {lbC1, lbC2, lbC3, lbC4, lbC5, lbC6, lbC7},
                {lbC8, lbC9, lbC10, lbC11, lbC12, lbC13, lbC14},
                {lbC15, lbC16, lbC17, lbC18, lbC19, lbC20, lbC21},
                {lbC22, lbC23, lbC24, lbC25, lbC26, lbC27, lbC28},
                {lbC29, lbC30, lbC31, lbC32, lbC33, lbC34, lbC35},
                {lbC36, lbC37, lbC38, lbC39, lbC40, lbC41, lbC42}
        };

        //일자가 직접적으로 쓰이는 Label
        dayPanel = new JPanel[][]{
                {plC1, plC2, plC3, plC4, plC5, plC6, plC7},
                {plC8, plC9, plC10, plC11, plC12, plC13, plC14},
                {plC15, plC16, plC17, plC18, plC19, plC20, plC21},
                {plC22, plC23, plC24, plC25, plC26, plC27, plC28},
                {plC29, plC30, plC31, plC32, plC33, plC34, plC35},
                {plC36, plC37, plC38, plC39, plC40, plC41, plC42}
        };
    }

    private void btnSetDesign() {
        btnFirst.setBorderPainted(false);
        btnPrev.setBorderPainted(false);
        btnNext.setBorderPainted(false);
        btnLast.setBorderPainted(false);

        btnFirst.setContentAreaFilled(false);
        btnPrev.setContentAreaFilled(false);
        btnNext.setContentAreaFilled(false);
        btnLast.setContentAreaFilled(false);

        btnSearch.setBorderPainted(false);
        btnAddTodoList.setBorderPainted(false);

        btnResult2.setBorderPainted(false);
        btnResult2.setContentAreaFilled(false);
        btnEditClose.setBorderPainted(false);
        btnCheckUser.setBorderPainted(false);

        btnTodoListDelete.setContentAreaFilled(false);

        btnAddResult.setContentAreaFilled(false);

        btnEditProjectResult.setContentAreaFilled(false);
        btnEditProjectResult.setBorderPainted(false);
    }

    private void imgSet() throws IOException {
        //하단 일정 추가버튼 디자인
        CircleGraphic circleGraphic = new CircleGraphic();
        btnAddTodo.add(circleGraphic);


        File fileBtnFirst = new File("src/main/java/img/firstBtn.png");
        File fileBtnPrev = new File("src/main/java/img/prevBtn.png");
        File fileBtnNext = new File("src/main/java/img/nextBtn.png");
        File fileBtnLast = new File("src/main/java/img/lastBtn.png");

        File fileBtnSearch = new File("src/main/java/img/search_W.png");

        File fileBtnHome = new File("src/main/java/img/home_w.png");

        File fileProfile = new File("src/main/java/img/basic_profile.png");

        File fileAdd = new File("src/main/java/img/add.png");

        BufferedImage imgBtnF = ImageIO.read(fileBtnFirst);
        BufferedImage imgBtnP = ImageIO.read(fileBtnPrev);
        BufferedImage imgBtnN = ImageIO.read(fileBtnNext);
        BufferedImage imgBtnL = ImageIO.read(fileBtnLast);
        BufferedImage imgBtnS = ImageIO.read(fileBtnSearch);
        BufferedImage imgBtnH = ImageIO.read(fileBtnHome);
        BufferedImage imgProf = ImageIO.read(fileProfile);
        BufferedImage imgAdd = ImageIO.read(fileAdd);

        btnFirst.setIcon(new ImageIcon(imgBtnF));
        btnPrev.setIcon(new ImageIcon(imgBtnP));
        btnNext.setIcon(new ImageIcon(imgBtnN));
        btnLast.setIcon(new ImageIcon(imgBtnL));
        btnSearch.setIcon(new ImageIcon(imgBtnS));
        lbHome.setIcon(new ImageIcon(imgBtnH));
        lbProf.setIcon(new ImageIcon(imgProf));
        btnAddTodoList.setIcon(new ImageIcon(imgAdd));
    }

    private void addEvent() {
        //모든 선택해제
        addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                todoList.clearSelection();
                todoList.setSelectedIndex(99);
                todoAllList.clearSelection();
                todoAllList.setSelectedIndex(99);
            }
        });

        //캘린더 버튼
        btnFirst.addActionListener(new DateReleaseHandler());
        btnPrev.addActionListener(new DateReleaseHandler());
        btnNext.addActionListener(new DateReleaseHandler());
        btnLast.addActionListener(new DateReleaseHandler());

        //캘린더 일자 클릭 이벤트
        for(int i = 0; i < dayPanel.length; i++) {
            for(int j = 0; j < dayPanel[i].length; j++) {
                int row = i;
                int col = j;
                dayPanel[i][j].addMouseListener(new MouseAdapter() {
                    @Override
                    public void mouseClicked(MouseEvent e) {
                        PointerInfo pointerInfo = MouseInfo.getPointerInfo();
                        int[] cool = {pointerInfo.getLocation().x, pointerInfo.getLocation().y};
                        if(e.getClickCount() > 1) calenderClick(row, col, cool);
                    }
                });
            }
        }

        //캘린더 '일' 마우스 hover시 배경 변경
        for(JPanel[] jPanels : dayPanel) for(JPanel jPanel : jPanels) jPanel.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                JPanel pl = (JPanel)e.getSource();
                pl.setBackground(new Color(238, 238, 238));
            }

            @Override
            public void mouseExited(MouseEvent e) {
                JPanel pl = (JPanel)e.getSource();
                pl.setBackground(new Color(255, 255, 255));
            }
        });

        //aside 클릭 시 card전환
        lbTodoBtn.addMouseListener(new CardBtnClickEventHandler());
        lbNextTodoBtn.addMouseListener(new CardBtnClickEventHandler());
        lbProjectBtn.addMouseListener(new CardBtnClickEventHandler());
        btnAddTodo.addMouseListener(new CardBtnClickEventHandler());

        //todoList Card에서 add버튼 클릭시
        btnAddTodoList.addActionListener(new AddTodoEventHandler());

        //Dialog Todo
        todoList.addMouseListener(new TodoEditPopupEventHandler());
        todoAllList.addMouseListener(new TodoEditPopupEventHandler());

        btnEditClose.addActionListener(new EditButtonEventHandler());
        btnResult2.addActionListener(new EditButtonEventHandler());

        btnCompletionTodo1.addActionListener(new CompletionTodoEventHandler());
        btnCompletionTodo2.addActionListener(new CompletionTodoEventHandler());


        //Dialog Project Add
        btnAddProject.addActionListener(e -> {
            clearAddProjectUser = 0;
            addProjectDialogSet();
            PointerInfo pointerInfo = MouseInfo.getPointerInfo();
            dlAddProject.setLocation(pointerInfo.getLocation().x, pointerInfo.getLocation().y);
            dlAddProject.setVisible(true);
        });

        btnClose.addActionListener(e -> dlAddProject.dispose());
        btnAddResult.addActionListener(e -> projectAddResult());
        btnCheckUser1.addActionListener(e -> projectShareBtn());

        plProjectBox.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                PointerInfo pointerInfo = MouseInfo.getPointerInfo();
                int coorY = e.getY();
                try {
                    projectBoxClick(coorY, pointerInfo.getLocation().x, pointerInfo.getLocation().y);
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
            }
        });
    }

    private void calenderClick(int i, int j, int[] loc) {
        int day = dayArr[i][j];
        System.out.println("클릭한 일자 : " + day);
        if(day == -1) return;

        String year = lbYear.getText();
        String month = lbMonth.getText();

        cbTodoResult.setEnabled(false);
        btnTodoListDelete.setEnabled(false);
        tfShareUser.setEditable(false);
        btnCheckUser.setEnabled(false);
        btnResult2.setText("등록");
        tfEditTodo.setText("");

        dlCheck = 2;
        System.out.println("Dialog 상태 : " + dlCheck);
        dlEditTodo.setLocation(loc[0], loc[1]);
        dlEditTodo.setVisible(true);


        try {
            Date selectDate = sdf.parse(year.trim() + "-" + month.trim() + "-" + day);
            SpinnerDateModel model = new SpinnerDateModel(selectDate, null, null, Calendar.DAY_OF_MONTH);
            spDateSelect.setModel(model);
            DateFormat df = new SimpleDateFormat("yyyy-MM-dd");

            JSpinner.DateEditor editor = new JSpinner.DateEditor(spDateSelect, "yyyy-MM-dd");
            JFormattedTextField ftf = editor.getTextField();
            ftf.setEditable(false);
            ftf.setHorizontalAlignment(JTextField.CENTER);
            ftf.setBackground(new Color(255,255,255));

            spDateSelect.setEditor(editor);

        } catch (ParseException e) {
            e.printStackTrace();
        }
    }

    //scrollPane 내 마우스 더블클릭 시
    private void projectBoxClick(int coorY, int x, int y) throws SQLException {
        int projectSize = projectListDTOList.size()-1;
        int projBoxHeight = 176 * projectSize;
        int clickIdx = coorY / 176;

        System.out.println("Y 좌표 : " + coorY);
        System.out.println("전체 높이 : " + projBoxHeight);
        System.out.println("index : " + clickIdx);

        System.out.println(projectListDTOList.get(clickIdx));
        projectEditSet(clickIdx);
        dlEditProject.setLocation(x, y);
        dlEditProject.setVisible(true);
    }

    private void projectEditSet(int idx) throws SQLException {
        tfShareUserSet1.setEditable(false);
        btnCheckUser2.setEnabled(false);

        ProjectListDTO projectListDTO = projectListDTOList.get(idx);    //클릭한 프로젝트 정보
        ProjectShareDTO projectShareDTO = new ProjectShareDTO();
        projectShareDTO.setPk_pjtNo(projectListDTO.getPk_pjtno());
        projectShareDTO.setPk_no(UserStateUtil.userNo);
        Date startDate = projectListDTO.getStartDate();
        Date endDate = projectListDTO.getEndDate();
        System.out.println(startDate);
        System.out.println(endDate);


        SpinnerDateModel model1 = new SpinnerDateModel(startDate, null, null, Calendar.DAY_OF_MONTH);
        SpinnerDateModel model2 = new SpinnerDateModel(endDate, null, null, Calendar.DAY_OF_MONTH);
        spStartDateSet1.setModel(model1);
        spEndDateSet1.setModel(model2);

        JSpinner.DateEditor editor1 = new JSpinner.DateEditor(spStartDateSet1, "yyyy-MM-dd");
        JSpinner.DateEditor editor2 = new JSpinner.DateEditor(spEndDateSet1, "yyyy-MM-dd");
        JFormattedTextField ftf1 = editor1.getTextField();
        JFormattedTextField ftf2 = editor2.getTextField();
        ftf1.setEditable(false);
        ftf1.setHorizontalAlignment(JTextField.CENTER);
        ftf1.setBackground(new Color(255,255,255));
        ftf2.setEditable(false);
        ftf2.setHorizontalAlignment(JTextField.CENTER);
        ftf2.setBackground(new Color(255,255,255));

        spStartDateSet1.setEditor(editor1);
        spEndDateSet1.setEditor(editor2);


        ProjectShareDTO shareDTO = projectShareDAO.selectProjectShare(projectShareDTO);
        String userDivi = shareDTO.getDivied();

        tfEditProjectTitle.setText(projectListDTO.getProjectTitle());
        tfEditProjectCon.setText(projectListDTO.getProjectContent());
        tfProjectDivi.setText(userDivi);
        tfEditProjectTitle.setText(projectListDTO.getProjectTitle());

        btnEditProjectResult.addActionListener(e -> {
            try {
                getEditProject(projectListDTO.getPk_pjtno());
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        });

        btnProjectDelete.addActionListener(e -> {
            try {
                projectShareDAO.deleteProjectShareUser(projectListDTO.getPk_pjtno());
                projectListDAO.deleteProject(projectListDTO.getPk_pjtno());
                projectListUpdate();
                projectBoxSet();
                plProjectBox.addMouseListener(new MouseAdapter() {
                    @Override
                    public void mouseClicked(MouseEvent e) {
                        PointerInfo pointerInfo = MouseInfo.getPointerInfo();
                        int coorY = e.getY();
                        try {
                            projectBoxClick(coorY, pointerInfo.getLocation().x, pointerInfo.getLocation().y);
                        } catch (SQLException ex) {
                            ex.printStackTrace();
                        }
                    }
                });
                JOptionPane.showMessageDialog(this, "삭제성공");
                dlEditProject.dispose();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        });

        btnEditProjectClose.addActionListener(e -> dlEditProject.dispose());
    }

    private void getEditProject(int pNo) throws SQLException {
        ProjectListDTO dto = new ProjectListDTO();
        ProjectShareDTO shareDTO = new ProjectShareDTO();

        SpinnerModel model1 = spStartDateSet1.getModel();
        SpinnerModel model2 = spEndDateSet1.getModel();
        Date startDate = (Date) model1.getValue();
        Date endDate = (Date) model2.getValue();


        String projTitle = tfEditProjectTitle.getText();
        String projCon = tfEditProjectCon.getText();
        String startD = sdf.format(startDate) + " 00:00:00";
        String endD = sdf.format(endDate) + " 00:00:00";

        dto.setPk_pjtno(pNo);
        dto.setProjectTitle(projTitle);
        dto.setProjectContent(projCon);
        dto.setStartDate(Timestamp.valueOf(startD));
        dto.setEndDate(Timestamp.valueOf(endD));

        String divi = tfProjectDivi.getText();
        shareDTO.setPk_pjtNo(pNo);
        shareDTO.setPk_no(UserStateUtil.userNo);
        shareDTO.setDivied(divi);

        int cnt1 = projectListDAO.updateProject(dto);
        int cnt2 = projectShareDAO.updateProjectShare(shareDTO);
        if(cnt1 > 0 && cnt2 > 0) {
            projectListUpdate();
            projectBoxSet();
            plProjectBox.addMouseListener(new MouseAdapter() {
                @Override
                public void mouseClicked(MouseEvent e) {
                    PointerInfo pointerInfo = MouseInfo.getPointerInfo();
                    int coorY = e.getY();
                    try {
                        projectBoxClick(coorY, pointerInfo.getLocation().x, pointerInfo.getLocation().y);
                    } catch (SQLException ex) {
                        ex.printStackTrace();
                    }
                }
            });
            JOptionPane.showMessageDialog(this, "수정성공");
            dlEditProject.dispose();
        }else {
            JOptionPane.showMessageDialog(this, "수정실패");
        }

    }


    //공동사용자 아이디 유효성 체크
    private void projectShareBtn() {
        String userId = tfShareUserSet.getText();
        int no = -1;

        try {
            if (userId == null || userId.isEmpty()) {
                JOptionPane.showMessageDialog(this, "공동 사용자 아이디를 입력해주세요.");
                tfShareUserSet.requestFocus();
            } else {
                no = userListDAO.stateUserNo(userId);
                if(no == -1) {
                    JOptionPane.showMessageDialog(this, "해당 사용자가 없습니다.");
                    tfShareUserSet.requestFocus();
                }else {
                    JOptionPane.showMessageDialog(this, "유효한 사용자입니다.");
                    clearAddProjectUser = 1;
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    //Project 생성버튼 클릭(최종생성)
    private void projectAddResult() {
        int chk = 0;
        if(tfShareUserSet.getText() != null && !tfShareUserSet.getText().isEmpty()) {
            if(clearAddProjectUser == 0) {
                JOptionPane.showMessageDialog(this, "공동 사용자 아이디를 체크해주세요.");
                return;
            }
            chk = 1;
        }

        ProjectListDTO dto = new ProjectListDTO();
        SpinnerModel model1 = spStartDateSet.getModel();
        SpinnerModel model2 = spEndDateSet.getModel();

        String prjTitle = tfAddProjectTitle.getText();
        String prjCon = tfAddProjectCon.getText();
        Date startDate = (Date) model1.getValue();
        Date endDate = (Date) model2.getValue();

        //유효성 검사
        if((prjTitle == null || prjTitle.isEmpty()) || prjTitle.equals("프로젝트 제목")) {
            JOptionPane.showMessageDialog(this, "제목을 입력하세요.");
            return;
        }

        if((prjCon == null || prjCon.isEmpty()) || prjCon.equals("프로젝트 내용")) {
            JOptionPane.showMessageDialog(this, "내용을 입력하세요.");
            return;
        }

        dto.setPk_no(UserStateUtil.userNo);
        dto.setProjectTitle(prjTitle);
        dto.setProjectContent(prjCon);
        dto.setStartDate(Timestamp.valueOf(sdf.format(startDate) + " 00:00:00"));
        dto.setEndDate(Timestamp.valueOf(sdf.format(endDate) + " 00:00:00"));

        try {
            int cnt1 = projectListDAO.insertProject(dto);
            int cnt2 = 1;
            List<ProjectShareDTO> list = projectShareDAO.projectList(UserStateUtil.userNo);
            int insertNo = list.get(0).getPk_pjtNo();
            if(chk == 1) {
                int no = userListDAO.stateUserNo(tfShareUserSet.getText()); //공동사용자 아이디로 유저 no리턴
                cnt2 = projectShareDAO.insertProjectShareUser(insertNo, no);
            }

            if(cnt1 > 0 && cnt2 > 0) {
                projectListUpdate();
                projectBoxSet();
                JOptionPane.showMessageDialog(this, "등록 성공");
                dlAddProject.dispose();
            }else {
                JOptionPane.showMessageDialog(this, "등록 실패");
                projectShareDAO.deleteProjectShareUser(insertNo);
                projectListDAO.deleteProject(insertNo);
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private class CardBtnClickEventHandler extends MouseAdapter {
        @Override
        public void mouseClicked(MouseEvent e) {
            if(e.getSource() == lbTodoBtn) {
                cardLayout.show(plMain, "2");
            }else if(e.getSource() == lbNextTodoBtn) {
                cardLayout.show(plMain, "3");
            }else if(e.getSource() == lbProjectBtn) {
                cardLayout.show(plMain, "4");
            }else if(e.getSource() == btnAddTodo) {
                cardLayout.show(plMain, "1");
            }
        }
    }

    class DateReleaseHandler implements ActionListener{
        @Override
        public void actionPerformed(ActionEvent e) {
            Calendar cal = new GregorianCalendar();
            cal.setTime(currentDate);

            if(e.getSource() == btnFirst) {
                cal.add(Calendar.MONTH, -12);
            }else if(e.getSource() == btnPrev) {
                cal.add(Calendar.MONTH, -1);
            }else if(e.getSource() == btnNext) {
                cal.add(Calendar.MONTH, 1);
            }else if(e.getSource() == btnLast) {
                cal.add(Calendar.MONTH, 12);
            }

            currentDate = cal.getTime();
            dateRelease(currentDate);
        }
    }


    //매개변수의 날짜객체를 기준으로 캘린더를 업데이트한다.
    private void dateRelease(Date date) {
        date.setDate(1);
        Calendar cal = new GregorianCalendar();
        cal.setTime(date);

        String month;
        String year;
        int lastDay = cal.getActualMaximum(Calendar.DAY_OF_MONTH);  //월의 마지막 날


        //캘린더 초기화
        //캘린더 초기화
        //캘린더 초기화
        for (JLabel[] jLabels : dayList) for (JLabel jLabel : jLabels) jLabel.setText("");



        //상단 년도, 월 업데이트
        //상단 년도, 월 업데이트
        //상단 년도, 월 업데이트
        year = String.valueOf(date.getYear()+1900);
        month = String.valueOf(date.getMonth()+1);

        if(month.length() == 1) month = "0" + month;

        lbYear.setText(year);
        lbMonth.setText(" " + month + " ");


        //캘린더 업데이트
        //캘린더 업데이트
        //캘린더 업데이트
        int day = 1;

        for (int[] ints : dayArr) {
            Arrays.fill(ints, -1);
        }

        calendarLoop :
        for(int i = 0; i < dayList.length; i++) {
            for(int j = 0; j < dayList[i].length; j++) {
                if(i == 0 && date.getDay() > j) continue;

                dayList[i][j].setText(String.valueOf(day));
                dayArr[i][j] = day;
                day++;
                if(day > lastDay) break calendarLoop;
            }
        }
        for(int i = 0; i < dayList.length; i++) {
            for(int j = 0; j < dayList[i].length; j++) {
                System.out.print(dayArr[i][j] + "\t");
            }
            System.out.println();
        }


    }

    //할 일 추가 클래스
    private class AddTodoEventHandler implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            try {
                if (e.getSource() == btnAddTodoList) {
                    addBoxTodoList();
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
    }

    private void addBoxTodoList() throws SQLException {
        TodoListDTO dto = new TodoListDTO();
        String addList = tfAddTodo.getText();
        if(addList == null || addList.isEmpty()) {
            JOptionPane.showMessageDialog(this, "할 일을 입력해주세요.");
            tfAddTodo.requestFocus();
            return;
        }

        String date = sdf.format(new Date());
        dto.setListContent(addList);
        dto.setPk_no(UserStateUtil.userNo);
        dto.setListDate(Timestamp.valueOf(date + " 00:00:00"));

        if(todoListDAO.insertBoxTodoList(dto) > 0) {
            todoListUpdate();
            todoListAllUpdate();
            tfAddTodo.setText("");
        }else {
            JOptionPane.showMessageDialog(this, "등록 실패");
            return;
        }
    }

    // TodoList에 마우스 클릭 시
    private class TodoEditPopupEventHandler extends MouseAdapter {
        @Override
        public void mouseClicked(MouseEvent e) {
            PointerInfo pt = MouseInfo.getPointerInfo();

            try {
                if (e.getClickCount() > 1) {
                    dlCheck = 1;
                    System.out.println("Dialog 상태 : " + dlCheck);

                    //Dialog에 날짜 데이터를 전달하기 위한 객체생성
                    if(e.getSource() == todoList) {
                        List<TodoListDTO> list = todoListDAO.selectAll("N");
                        List<TodoListDTO> resultList = new ArrayList<>();
                        for (TodoListDTO dto : list) {
                            Date time = new Date(dto.getListDate().getTime());
                            Date today = new Date();
                            if (sdf.format(time).equals(sdf.format(today))) resultList.add(dto);
                        }
                        //클릭한 list의 정보를 넘겨줌
                        selectIdx = todoList.getSelectedIndex();
                        todoListDTO = resultList.get(selectIdx);
                        tfEditTodo.setText(todoList.getSelectedValue());

//                    //수정 가능한 권한 확인
//                    if(!checkAuthno()) return;
                    }else if(e.getSource() == todoAllList) {
                        List<TodoListDTO> list = todoListDAO.selectAll("N");
                        selectIdx = todoAllList.getSelectedIndex();
                        todoListDTO = list.get(selectIdx);
                        tfEditTodo.setText(todoAllList.getSelectedValue());
                    }

                    //클릭한 시점의 좌표
                    int[] loc = {pt.getLocation().x, pt.getLocation().y};
                    System.out.println("x = " + loc[0] + ", y = " + loc[1]);

                    //Dialog EditTodoListPanel 팝업 관련
                    editTodoListPanel(loc);
//                    tfEditTodo.setText(todoList.getSelectedValue());
                }
            } catch (SQLException | ParseException ex) {
                ex.printStackTrace();
            }
        }
    }
    //Dialog AddProject
    public void addProjectDialogSet() {
        Date startDate = new Date();
        Date endDate = new Date();
        Calendar c = Calendar.getInstance();
        c.setTime(endDate);
        c.add(Calendar.DATE, 1);
        endDate = c.getTime();

        SpinnerDateModel model1 = new SpinnerDateModel(startDate, null, null, Calendar.DAY_OF_MONTH);
        SpinnerDateModel model2 = new SpinnerDateModel(endDate, null, null, Calendar.DAY_OF_MONTH);
        spStartDateSet.setModel(model1);
        spEndDateSet.setModel(model2);
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd");

        JSpinner.DateEditor editor1 = new JSpinner.DateEditor(spStartDateSet, "yyyy-MM-dd");
        JSpinner.DateEditor editor2 = new JSpinner.DateEditor(spEndDateSet, "yyyy-MM-dd");
        JFormattedTextField ftf1 = editor1.getTextField();
        JFormattedTextField ftf2 = editor2.getTextField();
        ftf1.setEditable(false);
        ftf1.setHorizontalAlignment(JTextField.CENTER);
        ftf1.setBackground(new Color(255,255,255));
        ftf2.setEditable(false);
        ftf2.setHorizontalAlignment(JTextField.CENTER);
        ftf2.setBackground(new Color(255,255,255));

        spStartDateSet.setEditor(editor1);
        spEndDateSet.setEditor(editor2);
    }


//    //수정 가능 권한 확인
//    private boolean checkAuthno() throws SQLException {
//        boolean result = true;
//
//        List<TodoListShareDTO> list = todoListShareDAO.todoList(UserStateUtil.userNo);  //해당 사용자의 리스트를 받아옴
//        for (TodoListShareDTO dto : list) {
//            if (dto.getPk_listNo() == todoListDTO.getPk_listNo())  //해당 사용자의 리스트와 선택한 리스트 비교
//                JOptionPane.showMessageDialog(this, "해당 내용에 대한 수정 권한이 없습니다.");
//                if (dto.getPk_authNo() == 2) result = false;
//        }
//
//        return result;
//    }
    //수정 가능 권한 확인
    private int checkAuthno() throws SQLException {
        int result = 0;

        List<TodoListShareDTO> list = todoListShareDAO.todoList(UserStateUtil.userNo);  //해당 사용자의 리스트를 받아옴
        for (TodoListShareDTO dto : list) {
            if (dto.getPk_listNo() == todoListDTO.getPk_listNo())  //해당 사용자의 리스트와 선택한 리스트 비교
                result = dto.getPk_authNo();
        }

        return result;
    }

    //Dialog EditTodoListPanel
    private void editTodoListPanel(int[] loc) throws ParseException, SQLException {
        btnResult2.setText("수정");
        cbTodoResult.setEnabled(true);
        btnTodoListDelete.setEnabled(true);
        tfShareUser.setEditable(true);
        btnCheckUser.setEnabled(true);

        editAuthno = checkAuthno();
        System.out.println("리스트에 대한 권한 : " + editAuthno);
        if(editAuthno == 2) {
            tfEditTodo.setEditable(false);
            spDateSelect.setEnabled(false);
            tfShareUser.setEditable(false);
            btnCheckUser.setEnabled(false);
//            btnTodoListDelete.setEnabled(false);
        }

        dlEditTodo.setLocation(loc[0], loc[1]);
        dlEditTodo.setVisible(true);

        Date date = todoListDTO.getListDate();
        SpinnerDateModel model = new SpinnerDateModel(date, null, null, Calendar.DAY_OF_MONTH);
        spDateSelect.setModel(model);
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd");

        JSpinner.DateEditor editor = new JSpinner.DateEditor(spDateSelect, "yyyy-MM-dd");
        JFormattedTextField ftf = editor.getTextField();
        ftf.setEditable(false);
        ftf.setHorizontalAlignment(JTextField.CENTER);
        ftf.setBackground(new Color(255,255,255));

        spDateSelect.setEditor(editor);
        spDateSelect.addChangeListener(e -> {
            Date value = (Date) model.getValue();
            Date next = (Date) model.getNextValue();
            if(value != null && next != null) {
                System.out.println("value = " + df.format(value) + "\t next = " + df.format(next));
            }
        });

        btnTodoListDelete.addActionListener(new EditButtonEventHandler());
        btnCheckUser.addActionListener(new EditButtonEventHandler());
    }

    //Edit Dialog 버튼 클릭 Handler
    private class EditButtonEventHandler implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            try {
                if (e.getSource() == btnEditClose) {
                    dlEditTodo.dispose();
                } else if (e.getSource() == btnResult2) {
                    if(dlCheck == 1) {
                        EditResult();
                    }else if(dlCheck == 2) {
                        AddResult();
                    }
                } else if (e.getSource() == btnTodoListDelete) {
                    EditDelete();
                } else if (e.getSource() == btnCheckUser) {
                    EditShare();
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
    }

    private void AddResult() throws SQLException {
        TodoListDTO dto = new TodoListDTO();
        SpinnerModel model = spDateSelect.getModel();
        Date value = (Date) model.getValue();

        String text = tfEditTodo.getText();
        String date = sdf.format(value);

        dto.setListContent(text);
        dto.setListDate(Timestamp.valueOf(date + " 00:00:00"));
        dto.setPk_no(UserStateUtil.userNo);

        if(todoListDAO.insertBoxTodoList(dto) > 0) {
            JOptionPane.showMessageDialog(this, "등록성공");
            todoListUpdate();
            todoListAllUpdate();
            dlEditTodo.setVisible(false);
        }else {
            JOptionPane.showMessageDialog(this, "등록실패");
            return;
        }
    }

    private void EditShare() throws SQLException {
        String userId = tfShareUser.getText();
        int no = -1;

        if (userId == null || userId.isEmpty()) {
            JOptionPane.showMessageDialog(this, "공유할 사용자 아이디를 입력하세요.");
            tfShareUser.requestFocus();
            return;
        }

        no = userListDAO.stateUserNo(userId);
        if(!(no >= 0)) {
            JOptionPane.showMessageDialog(this, "해당 사용자가 없습니다.");
            tfShareUser.requestFocus();
            return;
        }

        //공유하려는 사용자의 리스트에 이미 공유되고 있는지 확인
        List<TodoListShareDTO> list = todoListShareDAO.todoList(no);
        for (TodoListShareDTO sDto : list) {
            if (sDto.getPk_listNo() == todoListDTO.getPk_listNo()) {
                JOptionPane.showMessageDialog(this, "이미 공유하고 있는 사용자입니다.");
                tfShareUser.setText("");
                return;
            }
        }

        int cnt = todoListShareDAO.insertTodoListShare(todoListDTO.getPk_listNo(), no);
        if(cnt > 0) {
            JOptionPane.showMessageDialog(this, userId + "와 공유하였습니다.");
            System.out.println("공유 성공");
        }else {
            JOptionPane.showMessageDialog(this, userId + "와 공유 실패하였습니다.");
            System.out.println("공유 실패");
        }
        return;

    }

    private void EditDelete() throws SQLException {
        System.out.println("삭제할 행의 idx : " + selectIdx);
        System.out.println(todoListDTO + "\n");

        if(editAuthno == 1) {
            if(!(todoListShareDAO.deleteTodoListShare(todoListDTO.getPk_listNo()) > 0)) {
                System.out.println("todoListShare에서 삭제 실패");
                return;
            }
            if(!(todoListDAO.deleteTodoList(todoListDTO.getPk_listNo()) > 0)) {
                System.out.println("todoList에서 삭제 실패");
                return;
            }
        }else if(editAuthno == 2) {
            if(!(todoListShareDAO.deleteTodoListShare(todoListDTO.getPk_listNo(), UserStateUtil.userNo) > 0)) {
                System.out.println("todoListShare에서 삭제 실패");
                return;
            }
        }

        todoListUpdate();
        todoListAllUpdate();
        dlEditTodo.dispose();
    }

    private void EditResult() throws SQLException {
        TodoListDTO dto = new TodoListDTO();
        SpinnerModel model = spDateSelect.getModel();
        Date value = (Date) model.getValue();

        String text = tfEditTodo.getText();
        String date = sdf.format(value);
        String completion = cbTodoResult.isSelected() ? "Y" : "N";

        dto.setPk_listNo(todoListDTO.getPk_listNo());
        dto.setListContent(text);
        dto.setListDate(Timestamp.valueOf(date + " 00:00:00"));
        dto.setPk_no(UserStateUtil.userNo);
        dto.setListYn(completion);

        if(todoListDAO.updateTodoList(dto) > 0) {
            JOptionPane.showMessageDialog(this, "수정완료");
            todoListUpdate();
            todoListAllUpdate();
            dlEditTodo.setVisible(false);
        }else {
            JOptionPane.showMessageDialog(this, "수정실패");
            return;
        }
    }



    //Home버튼 배경 circle
    class CircleGraphic extends JPanel {
        public CircleGraphic() {
            setBackground(new Color(241,244,247));
        }

        public void paint(Graphics g) {
            super.paint(g);
            g.setColor(new Color(216,223,231));
            g.fillOval(0, 0, 68, 68);
        }
    }

    private class CompletionTodoEventHandler implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            try {
                todoCompletionSet();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }

            //클릭한 시점의 좌표
            PointerInfo pt = MouseInfo.getPointerInfo();
            int[] loc = {pt.getLocation().x, pt.getLocation().y};
            System.out.println("x = " + loc[0] + ", y = " + loc[1]);

            dlCompletionTodo.setLocation(loc[0], loc[1]);
            dlCompletionTodo.setVisible(true);
        }
    }

    public class ProjectListPanel extends JPanel  {
        private JLabel title;
        private JLabel con;
        private JLabel userList;
        private JLabel startD;
        private JLabel endD;
        private JLabel divide;

        private JLabel userListTitle;

        private JPanel panelLine1;
        private JPanel panelLine2;
        private JPanel panelLine3;
        private JPanel panelLine4;

        private JPanel userBox;
        private JPanel dateBox;

        public ProjectListPanel() {
            setLayout(new GridLayout(4, 1));
            setBackground(new java.awt.Color(255,255,255));
            setBorder(BorderFactory.createEmptyBorder(10 , 0 , 10 , 0));

            init();
        }

        public ProjectListPanel(ProjectListDTO projectListDTO)  {
            this();

            Date startDate = new Date();
            String startDateFomat = "";
            String endDateFomat = "";

            List<ProjectShareDTO> list;
            String[] userIdList;
            StringBuilder userIdText = new StringBuilder();

            //해당 프로젝트의 사용자 아이디 가져오기
            int pNo = projectListDTO.getPk_pjtno(); //프로젝트 넘버 가져오기
            try {
                list = projectShareDAO.selectUserNo(pNo);//프로젝트 넘버로 연결되어있는 사용자 넘버 찾기(Share테이블)
                userIdList = new String[list.size()];
                for(int i = 0; i < list.size(); i++){
                    ProjectShareDTO dto = list.get(i);
                    userIdList[i] = userListDAO.getUserId(dto.getPk_no());
                    userIdText.append(userIdList[i]);
                    if((userIdList.length-1) != i) userIdText.append(", ");

                    if(dto.getPk_no() == UserStateUtil.userNo) divide.setText(dto.getDivied());

                }
            } catch (SQLException e) {
                e.printStackTrace();
            }


            if((projectListDTO.getStartDate() != null) && (projectListDTO.getEndDate() != null)) {
                startDate = projectListDTO.getStartDate();
                Date endDate = projectListDTO.getEndDate();

                startDateFomat = sdf.format(startDate);
                endDateFomat = sdf.format(endDate);
            }
            startDateFomat = sdf.format(startDate);

            title.setText(projectListDTO.getProjectTitle());
            con.setText(projectListDTO.getProjectContent());
            userList.setText(String.valueOf(userIdText));
            startD.setText(startDateFomat + " ~ ");
            endD.setText(endDateFomat);
//            divide.setText();
        }

        public void init(){
            panelLine1 = new JPanel(new BorderLayout());
            panelLine2 = new JPanel(new BorderLayout());
            panelLine3 = new JPanel(new BorderLayout());
            panelLine4 = new JPanel(new BorderLayout());

            userBox = new JPanel(new BorderLayout());
            dateBox = new JPanel();

            panelLine1.setBackground(new Color(248,248,248));
            panelLine2.setBackground(new Color(248,248,248));
            panelLine3.setBackground(new Color(248,248,248));
            panelLine4.setBackground(new Color(226,226,226));

            userBox.setBackground(new Color(248,248,248));
            dateBox.setBackground(new Color(226,226,226));

            title = new JLabel("제목");
            con = new JLabel("내용");
            userList = new JLabel("참여자 목록");
            userListTitle = new JLabel("공동 사용자");
            startD = new JLabel("시작일");
            endD = new JLabel("종료일");
            divide = new JLabel("분담내용");


            Border marginL = BorderFactory.createEmptyBorder(0 , 12 , 0 , 12);

            title.setBorder(marginL);
            con.setBorder(marginL);
            userBox.setBorder(marginL);
            userListTitle.setBorder(marginL);
            dateBox.setBorder(marginL);
            divide.setBorder(marginL);

            title.setOpaque(true);
            title.setBackground(new Color(53,53,53));
            title.setForeground(new Color(226,226,226));

            divide.setOpaque(true);
            divide.setBackground(new Color(186,184,184));
            divide.setForeground(new Color(255,255,255));

            startD.setForeground(new Color(186,184,184));
            endD.setForeground(new Color(186,184,184));

            userListTitle.setForeground(new Color(226,226,226));

            title.setFont(new java.awt.Font("맑은 고딕", Font.BOLD, 20));
            con.setFont(new java.awt.Font("맑은 고딕", Font.BOLD, 20));
            userList.setFont(new java.awt.Font("맑은 고딕", Font.BOLD, 20));
            startD.setFont(new java.awt.Font("맑은 고딕", Font.BOLD, 20));
            endD.setFont(new java.awt.Font("맑은 고딕", Font.BOLD, 20));
            divide.setFont(new java.awt.Font("맑은 고딕", Font.BOLD, 20));

            userListTitle.setFont(new java.awt.Font("맑은 고딕", Font.BOLD, 20));

            userBox.add(userList, BorderLayout.WEST);
            userBox.add(userListTitle, BorderLayout.CENTER);

            dateBox.add(startD);
            dateBox.add(endD);

            panelLine1.add(title, BorderLayout.WEST);
            panelLine2.add(con, BorderLayout.WEST);
            panelLine3.add(userBox, BorderLayout.CENTER);
            panelLine3.add(dateBox, BorderLayout.EAST);
            panelLine4.add(divide, BorderLayout.WEST);

            add(panelLine1);
            add(panelLine2);
            add(panelLine3);
            add(panelLine4);
        }
    }
}














//class ProfileCircleGraphic extends JPanel {
//    public ProfileCircleGraphic() {
//        setBackground(new Color(255,255,255));
//    }
//
//    public void paint(Graphics g) {
//        super.paint(g);
//        g.setColor(new Color(216,223,231));
//        g.fillOval(0, 0, 130, 130);
//    }
//}